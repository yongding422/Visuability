{"version":3,"file":"contentScript.36d1145a7587a20d9bfb.hot-update.js","mappingsztBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxrzNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACpnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACbvltIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrpxvellBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChphhpzNA;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACLA;AACA;AAEA;AACA;AACA;AAAA;AADA;;AAKA;;AAEA;AAEA;;AAEA;AAEA;AACA;AAEA;;AAEA;AAEA;AAEA;AACA;;AACA;AAEA;AAEA;;AAEA;AACA;;;AAGA;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AAEA;AAEA;;AAGA;AACA;AACA;AAQA;;AAEA;AAEA;AACA;AACA;;AACA;AACA;;AACA;;AACA;AAEA;AACA;AACA;;AAGA;AAEA;AACA;AACA;;AACA;AAEA;AACA;AACA;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://visuability/./node_modules/@azure/cognitiveservices-computervision/esm/computerVisionClient.js","webpack://visuability/./node_modules/@azure/cognitiveservices-computervision/esm/computerVisionClientContext.js","webpack://visuability/./node_modules/@azure/cognitiveservices-computervision/esm/models/index.js","webpack://visuability/./node_modules/@azure/cognitiveservices-computervision/esm/models/mappers.js","webpack://visuability/./node_modules/@azure/cognitiveservices-computervision/esm/models/parameters.js","webpack://visuability/./node_modules/@azure/cognitiveservices-computervision/node_modules/tslib/tslib.es6.js","webpack://visuability/./node_modules/@azure/core-auth/dist-esm/src/tokenCredential.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/credentials/apiKeyCredentials.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/credentials/azureIdentityTokenCredentialAdapter.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/httpHeaders.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/httpPipelineLogLevel.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/operationParameter.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/operationSpec.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/agentPolicy.browser.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/deserializationPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/exponentialRetryPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/generateClientRequestIdPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/msRestUserAgentPolicy.browser.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/proxyPolicy.browser.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/redirectPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/requestPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/rpRegistrationPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/signingPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/systemErrorRetryPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/throttlingRetryPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/policies/userAgentPolicy.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/queryCollectionFormat.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/restError.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/serializer.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/serviceClient.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/url.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/util/base64.browser.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/util/constants.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/util/utils.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/util/xml.browser.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/webResource.js","webpack://visuability/./node_modules/@azure/ms-rest-js/es/lib/xhrHttpClient.js","webpack://visuability/./node_modules/@azure/ms-rest-js/node_modules/tslib/tslib.es6.js","webpack://visuability/./node_modules/@azure/ms-rest-js/node_modules/uuid/dist/esm-browser/regex.js","webpack://visuability/./node_modules/@azure/ms-rest-js/node_modules/uuid/dist/esm-browser/rng.js","webpack://visuability/./node_modules/@azure/ms-rest-js/node_modules/uuid/dist/esm-browser/stringify.js","webpack://visuability/./node_modules/@azure/ms-rest-js/node_modules/uuid/dist/esm-browser/v4.js","webpack://visuability/./node_modules/@azure/ms-rest-js/node_modules/uuid/dist/esm-browser/validate.js","webpack://visuability/./src/pages/Content/index.js","webpack://visuability/webpack/runtime/compat get default export","webpack://visuability/webpack/runtime/define property getters","webpack://visuability/webpack/runtime/getFullHash","webpack://visuability/webpack/runtime/make namespace object"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport { __assign, __extends } from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as Parameters from \"./models/parameters\";\nimport { ComputerVisionClientContext } from \"./computerVisionClientContext\";\nvar ComputerVisionClient = /** @class */ (function (_super) {\n    __extends(ComputerVisionClient, _super);\n    /**\n     * Initializes a new instance of the ComputerVisionClient class.\n     * @param endpoint Supported Cognitive Services endpoints.\n     * @param credentials Subscription credentials which uniquely identify client subscription.\n     * @param [options] The parameter options\n     */\n    function ComputerVisionClient(credentials, endpoint, options) {\n        return _super.call(this, credentials, endpoint, options) || this;\n    }\n    ComputerVisionClient.prototype.analyzeImage = function (url, options, callback) {\n        return this.sendOperationRequest({\n            url: url,\n            options: options\n        }, analyzeImageOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.describeImage = function (url, options, callback) {\n        return this.sendOperationRequest({\n            url: url,\n            options: options\n        }, describeImageOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.detectObjects = function (url, options, callback) {\n        return this.sendOperationRequest({\n            url: url,\n            options: options\n        }, detectObjectsOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.listModels = function (options, callback) {\n        return this.sendOperationRequest({\n            options: options\n        }, listModelsOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.analyzeImageByDomain = function (model, url, options, callback) {\n        return this.sendOperationRequest({\n            model: model,\n            url: url,\n            options: options\n        }, analyzeImageByDomainOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.recognizePrintedText = function (detectOrientation, url, options, callback) {\n        return this.sendOperationRequest({\n            detectOrientation: detectOrientation,\n            url: url,\n            options: options\n        }, recognizePrintedTextOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.tagImage = function (url, options, callback) {\n        return this.sendOperationRequest({\n            url: url,\n            options: options\n        }, tagImageOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.generateThumbnail = function (width, height, url, options, callback) {\n        return this.sendOperationRequest({\n            width: width,\n            height: height,\n            url: url,\n            options: options\n        }, generateThumbnailOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.getAreaOfInterest = function (url, options, callback) {\n        return this.sendOperationRequest({\n            url: url,\n            options: options\n        }, getAreaOfInterestOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.read = function (url, options, callback) {\n        return this.sendOperationRequest({\n            url: url,\n            options: options\n        }, readOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.getReadResult = function (operationId, options, callback) {\n        return this.sendOperationRequest({\n            operationId: operationId,\n            options: options\n        }, getReadResultOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.analyzeImageInStream = function (image, options, callback) {\n        return this.sendOperationRequest({\n            image: image,\n            options: options\n        }, analyzeImageInStreamOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.getAreaOfInterestInStream = function (image, options, callback) {\n        return this.sendOperationRequest({\n            image: image,\n            options: options\n        }, getAreaOfInterestInStreamOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.describeImageInStream = function (image, options, callback) {\n        return this.sendOperationRequest({\n            image: image,\n            options: options\n        }, describeImageInStreamOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.detectObjectsInStream = function (image, options, callback) {\n        return this.sendOperationRequest({\n            image: image,\n            options: options\n        }, detectObjectsInStreamOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.generateThumbnailInStream = function (width, height, image, options, callback) {\n        return this.sendOperationRequest({\n            width: width,\n            height: height,\n            image: image,\n            options: options\n        }, generateThumbnailInStreamOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.analyzeImageByDomainInStream = function (model, image, options, callback) {\n        return this.sendOperationRequest({\n            model: model,\n            image: image,\n            options: options\n        }, analyzeImageByDomainInStreamOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.recognizePrintedTextInStream = function (detectOrientation, image, options, callback) {\n        return this.sendOperationRequest({\n            detectOrientation: detectOrientation,\n            image: image,\n            options: options\n        }, recognizePrintedTextInStreamOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.tagImageInStream = function (image, options, callback) {\n        return this.sendOperationRequest({\n            image: image,\n            options: options\n        }, tagImageInStreamOperationSpec, callback);\n    };\n    ComputerVisionClient.prototype.readInStream = function (image, options, callback) {\n        return this.sendOperationRequest({\n            image: image,\n            options: options\n        }, readInStreamOperationSpec, callback);\n    };\n    return ComputerVisionClient;\n}(ComputerVisionClientContext));\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers);\nvar analyzeImageOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"analyze\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.visualFeatures,\n        Parameters.details,\n        Parameters.language0,\n        Parameters.descriptionExclude,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: {\n            url: \"url\"\n        },\n        mapper: __assign(__assign({}, Mappers.ImageUrl), { required: true })\n    },\n    responses: {\n        200: {\n            bodyMapper: Mappers.ImageAnalysis\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar describeImageOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"describe\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.maxCandidates,\n        Parameters.language0,\n        Parameters.descriptionExclude,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: {\n            url: \"url\"\n        },\n        mapper: __assign(__assign({}, Mappers.ImageUrl), { required: true })\n    },\n    responses: {\n        200: {\n            bodyMapper: Mappers.ImageDescription\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar detectObjectsOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"detect\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: {\n            url: \"url\"\n        },\n        mapper: __assign(__assign({}, Mappers.ImageUrl), { required: true })\n    },\n    responses: {\n        200: {\n            bodyMapper: Mappers.DetectResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar listModelsOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"models\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListModelsResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar analyzeImageByDomainOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"models/{model}/analyze\",\n    urlParameters: [\n        Parameters.endpoint,\n        Parameters.model\n    ],\n    queryParameters: [\n        Parameters.language0,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: {\n            url: \"url\"\n        },\n        mapper: __assign(__assign({}, Mappers.ImageUrl), { required: true })\n    },\n    responses: {\n        200: {\n            bodyMapper: Mappers.DomainModelResults\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar recognizePrintedTextOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"ocr\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.detectOrientation,\n        Parameters.language1,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: {\n            url: \"url\"\n        },\n        mapper: __assign(__assign({}, Mappers.ImageUrl), { required: true })\n    },\n    responses: {\n        200: {\n            bodyMapper: Mappers.OcrResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar tagImageOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"tag\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.language0,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: {\n            url: \"url\"\n        },\n        mapper: __assign(__assign({}, Mappers.ImageUrl), { required: true })\n    },\n    responses: {\n        200: {\n            bodyMapper: Mappers.TagResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar generateThumbnailOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"generateThumbnail\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.width,\n        Parameters.height,\n        Parameters.smartCropping,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: {\n            url: \"url\"\n        },\n        mapper: __assign(__assign({}, Mappers.ImageUrl), { required: true })\n    },\n    responses: {\n        200: {\n            bodyMapper: {\n                serializedName: \"parsedResponse\",\n                type: {\n                    name: \"Stream\"\n                }\n            }\n        },\n        default: {}\n    },\n    serializer: serializer\n};\nvar getAreaOfInterestOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"areaOfInterest\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: {\n            url: \"url\"\n        },\n        mapper: __assign(__assign({}, Mappers.ImageUrl), { required: true })\n    },\n    responses: {\n        200: {\n            bodyMapper: Mappers.AreaOfInterestResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar readOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"read/analyze\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.language2,\n        Parameters.pages,\n        Parameters.modelVersion,\n        Parameters.readingOrder\n    ],\n    requestBody: {\n        parameterPath: {\n            url: \"url\"\n        },\n        mapper: __assign(__assign({}, Mappers.ImageUrl), { required: true })\n    },\n    responses: {\n        202: {\n            headersMapper: Mappers.ReadHeaders\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionOcrError,\n            headersMapper: Mappers.ReadHeaders\n        }\n    },\n    serializer: serializer\n};\nvar getReadResultOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"read/analyzeResults/{operationId}\",\n    urlParameters: [\n        Parameters.endpoint,\n        Parameters.operationId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.ReadOperationResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionOcrError\n        }\n    },\n    serializer: serializer\n};\nvar analyzeImageInStreamOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"analyze\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.visualFeatures,\n        Parameters.details,\n        Parameters.language0,\n        Parameters.descriptionExclude,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: \"image\",\n        mapper: {\n            required: true,\n            serializedName: \"Image\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.ImageAnalysis\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar getAreaOfInterestInStreamOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"areaOfInterest\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: \"image\",\n        mapper: {\n            required: true,\n            serializedName: \"Image\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.AreaOfInterestResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar describeImageInStreamOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"describe\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.maxCandidates,\n        Parameters.language0,\n        Parameters.descriptionExclude,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: \"image\",\n        mapper: {\n            required: true,\n            serializedName: \"Image\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.ImageDescription\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar detectObjectsInStreamOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"detect\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: \"image\",\n        mapper: {\n            required: true,\n            serializedName: \"Image\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.DetectResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar generateThumbnailInStreamOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"generateThumbnail\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.width,\n        Parameters.height,\n        Parameters.smartCropping,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: \"image\",\n        mapper: {\n            required: true,\n            serializedName: \"Image\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        200: {\n            bodyMapper: {\n                serializedName: \"parsedResponse\",\n                type: {\n                    name: \"Stream\"\n                }\n            }\n        },\n        default: {}\n    },\n    serializer: serializer\n};\nvar analyzeImageByDomainInStreamOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"models/{model}/analyze\",\n    urlParameters: [\n        Parameters.endpoint,\n        Parameters.model\n    ],\n    queryParameters: [\n        Parameters.language0,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: \"image\",\n        mapper: {\n            required: true,\n            serializedName: \"Image\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.DomainModelResults\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar recognizePrintedTextInStreamOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"ocr\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.detectOrientation,\n        Parameters.language1,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: \"image\",\n        mapper: {\n            required: true,\n            serializedName: \"Image\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.OcrResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar tagImageInStreamOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"tag\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.language0,\n        Parameters.modelVersion\n    ],\n    requestBody: {\n        parameterPath: \"image\",\n        mapper: {\n            required: true,\n            serializedName: \"Image\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        200: {\n            bodyMapper: Mappers.TagResult\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionErrorResponse\n        }\n    },\n    serializer: serializer\n};\nvar readInStreamOperationSpec = {\n    httpMethod: \"POST\",\n    path: \"read/analyze\",\n    urlParameters: [\n        Parameters.endpoint\n    ],\n    queryParameters: [\n        Parameters.language2,\n        Parameters.pages,\n        Parameters.modelVersion,\n        Parameters.readingOrder\n    ],\n    requestBody: {\n        parameterPath: \"image\",\n        mapper: {\n            required: true,\n            serializedName: \"Image\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        202: {\n            headersMapper: Mappers.ReadInStreamHeaders\n        },\n        default: {\n            bodyMapper: Mappers.ComputerVisionOcrError,\n            headersMapper: Mappers.ReadInStreamHeaders\n        }\n    },\n    serializer: serializer\n};\nexport { ComputerVisionClient, ComputerVisionClientContext, Models as ComputerVisionModels, Mappers as ComputerVisionMappers };\n//# sourceMappingURL=computerVisionClient.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport { __extends } from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nvar packageName = \"@azure/cognitiveservices-computervision\";\nvar packageVersion = \"8.1.0\";\nvar ComputerVisionClientContext = /** @class */ (function (_super) {\n    __extends(ComputerVisionClientContext, _super);\n    /**\n     * Initializes a new instance of the ComputerVisionClientContext class.\n     * @param endpoint Supported Cognitive Services endpoints.\n     * @param credentials Subscription credentials which uniquely identify client subscription.\n     * @param [options] The parameter options\n     */\n    function ComputerVisionClientContext(credentials, endpoint, options) {\n        var _this = this;\n        if (endpoint == undefined) {\n            throw new Error(\"'endpoint' cannot be null.\");\n        }\n        if (credentials == undefined) {\n            throw new Error(\"'credentials' cannot be null.\");\n        }\n        if (!options) {\n            options = {};\n        }\n        if (!options.userAgent) {\n            var defaultUserAgent = msRest.getDefaultUserAgentValue();\n            options.userAgent = packageName + \"/\" + packageVersion + \" \" + defaultUserAgent;\n        }\n        _this = _super.call(this, credentials, options) || this;\n        _this.baseUri = \"{Endpoint}/vision/v3.2\";\n        _this.requestContentType = \"application/json; charset=utf-8\";\n        _this.endpoint = endpoint;\n        _this.credentials = credentials;\n        return _this;\n    }\n    return ComputerVisionClientContext;\n}(msRest.ServiceClient));\nexport { ComputerVisionClientContext };\n//# sourceMappingURL=computerVisionClientContext.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n//# sourceMappingURL=index.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nexport var FaceRectangle = {\n    serializedName: \"FaceRectangle\",\n    type: {\n        name: \"Composite\",\n        className: \"FaceRectangle\",\n        modelProperties: {\n            left: {\n                nullable: false,\n                serializedName: \"left\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            top: {\n                nullable: false,\n                serializedName: \"top\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            width: {\n                nullable: false,\n                serializedName: \"width\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            height: {\n                nullable: false,\n                serializedName: \"height\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var CelebritiesModel = {\n    serializedName: \"CelebritiesModel\",\n    type: {\n        name: \"Composite\",\n        className: \"CelebritiesModel\",\n        modelProperties: {\n            name: {\n                nullable: true,\n                serializedName: \"name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            confidence: {\n                nullable: false,\n                serializedName: \"confidence\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            faceRectangle: {\n                serializedName: \"faceRectangle\",\n                type: {\n                    name: \"Composite\",\n                    className: \"FaceRectangle\"\n                }\n            }\n        }\n    }\n};\nexport var LandmarksModel = {\n    serializedName: \"LandmarksModel\",\n    type: {\n        name: \"Composite\",\n        className: \"LandmarksModel\",\n        modelProperties: {\n            name: {\n                nullable: true,\n                serializedName: \"name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            confidence: {\n                nullable: false,\n                serializedName: \"confidence\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var CategoryDetail = {\n    serializedName: \"CategoryDetail\",\n    type: {\n        name: \"Composite\",\n        className: \"CategoryDetail\",\n        modelProperties: {\n            celebrities: {\n                nullable: true,\n                serializedName: \"celebrities\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"CelebritiesModel\"\n                        }\n                    }\n                }\n            },\n            landmarks: {\n                nullable: true,\n                serializedName: \"landmarks\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"LandmarksModel\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var Category = {\n    serializedName: \"Category\",\n    type: {\n        name: \"Composite\",\n        className: \"Category\",\n        modelProperties: {\n            name: {\n                nullable: true,\n                serializedName: \"name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            score: {\n                nullable: false,\n                serializedName: \"score\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            detail: {\n                serializedName: \"detail\",\n                type: {\n                    name: \"Composite\",\n                    className: \"CategoryDetail\"\n                }\n            }\n        }\n    }\n};\nexport var AdultInfo = {\n    serializedName: \"AdultInfo\",\n    type: {\n        name: \"Composite\",\n        className: \"AdultInfo\",\n        modelProperties: {\n            isAdultContent: {\n                nullable: false,\n                serializedName: \"isAdultContent\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            isRacyContent: {\n                nullable: false,\n                serializedName: \"isRacyContent\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            isGoryContent: {\n                nullable: false,\n                serializedName: \"isGoryContent\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            adultScore: {\n                nullable: false,\n                serializedName: \"adultScore\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            racyScore: {\n                nullable: false,\n                serializedName: \"racyScore\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            goreScore: {\n                nullable: false,\n                serializedName: \"goreScore\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var ColorInfo = {\n    serializedName: \"ColorInfo\",\n    type: {\n        name: \"Composite\",\n        className: \"ColorInfo\",\n        modelProperties: {\n            dominantColorForeground: {\n                nullable: true,\n                serializedName: \"dominantColorForeground\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            dominantColorBackground: {\n                nullable: true,\n                serializedName: \"dominantColorBackground\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            dominantColors: {\n                nullable: true,\n                serializedName: \"dominantColors\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            },\n            accentColor: {\n                nullable: true,\n                serializedName: \"accentColor\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            isBWImg: {\n                nullable: false,\n                serializedName: \"isBWImg\",\n                type: {\n                    name: \"Boolean\"\n                }\n            }\n        }\n    }\n};\nexport var ImageType = {\n    serializedName: \"ImageType\",\n    type: {\n        name: \"Composite\",\n        className: \"ImageType\",\n        modelProperties: {\n            clipArtType: {\n                nullable: false,\n                serializedName: \"clipArtType\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            lineDrawingType: {\n                nullable: false,\n                serializedName: \"lineDrawingType\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var ImageTag = {\n    serializedName: \"ImageTag\",\n    type: {\n        name: \"Composite\",\n        className: \"ImageTag\",\n        modelProperties: {\n            name: {\n                nullable: true,\n                serializedName: \"name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            confidence: {\n                nullable: false,\n                serializedName: \"confidence\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            hint: {\n                nullable: true,\n                serializedName: \"hint\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ImageCaption = {\n    serializedName: \"ImageCaption\",\n    type: {\n        name: \"Composite\",\n        className: \"ImageCaption\",\n        modelProperties: {\n            text: {\n                nullable: true,\n                serializedName: \"text\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            confidence: {\n                nullable: false,\n                serializedName: \"confidence\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var ImageDescriptionDetails = {\n    serializedName: \"ImageDescriptionDetails\",\n    type: {\n        name: \"Composite\",\n        className: \"ImageDescriptionDetails\",\n        modelProperties: {\n            tags: {\n                nullable: true,\n                serializedName: \"tags\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            },\n            captions: {\n                nullable: true,\n                serializedName: \"captions\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ImageCaption\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var FaceDescription = {\n    serializedName: \"FaceDescription\",\n    type: {\n        name: \"Composite\",\n        className: \"FaceDescription\",\n        modelProperties: {\n            age: {\n                nullable: false,\n                serializedName: \"age\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            gender: {\n                nullable: true,\n                serializedName: \"gender\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Male\",\n                        \"Female\"\n                    ]\n                }\n            },\n            faceRectangle: {\n                serializedName: \"faceRectangle\",\n                type: {\n                    name: \"Composite\",\n                    className: \"FaceRectangle\"\n                }\n            }\n        }\n    }\n};\nexport var BoundingRect = {\n    serializedName: \"BoundingRect\",\n    type: {\n        name: \"Composite\",\n        className: \"BoundingRect\",\n        modelProperties: {\n            x: {\n                nullable: false,\n                serializedName: \"x\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            y: {\n                nullable: false,\n                serializedName: \"y\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            w: {\n                nullable: false,\n                serializedName: \"w\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            h: {\n                nullable: false,\n                serializedName: \"h\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var ObjectHierarchy = {\n    serializedName: \"ObjectHierarchy\",\n    type: {\n        name: \"Composite\",\n        className: \"ObjectHierarchy\",\n        modelProperties: {\n            object: {\n                nullable: true,\n                serializedName: \"object\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            confidence: {\n                nullable: false,\n                serializedName: \"confidence\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            parent: {\n                serializedName: \"parent\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ObjectHierarchy\"\n                }\n            }\n        }\n    }\n};\nexport var DetectedObject = {\n    serializedName: \"DetectedObject\",\n    type: {\n        name: \"Composite\",\n        className: \"DetectedObject\",\n        modelProperties: {\n            rectangle: {\n                readOnly: true,\n                serializedName: \"rectangle\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BoundingRect\"\n                }\n            },\n            object: {\n                nullable: true,\n                serializedName: \"object\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            confidence: {\n                nullable: false,\n                serializedName: \"confidence\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            parent: {\n                serializedName: \"parent\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ObjectHierarchy\"\n                }\n            }\n        }\n    }\n};\nexport var DetectedBrand = {\n    serializedName: \"DetectedBrand\",\n    type: {\n        name: \"Composite\",\n        className: \"DetectedBrand\",\n        modelProperties: {\n            name: {\n                nullable: true,\n                readOnly: true,\n                serializedName: \"name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            confidence: {\n                nullable: false,\n                readOnly: true,\n                serializedName: \"confidence\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            rectangle: {\n                readOnly: true,\n                serializedName: \"rectangle\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BoundingRect\"\n                }\n            }\n        }\n    }\n};\nexport var ImageMetadata = {\n    serializedName: \"ImageMetadata\",\n    type: {\n        name: \"Composite\",\n        className: \"ImageMetadata\",\n        modelProperties: {\n            width: {\n                nullable: false,\n                serializedName: \"width\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            height: {\n                nullable: false,\n                serializedName: \"height\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            format: {\n                nullable: true,\n                serializedName: \"format\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ImageAnalysis = {\n    serializedName: \"ImageAnalysis\",\n    type: {\n        name: \"Composite\",\n        className: \"ImageAnalysis\",\n        modelProperties: {\n            categories: {\n                nullable: true,\n                serializedName: \"categories\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"Category\"\n                        }\n                    }\n                }\n            },\n            adult: {\n                serializedName: \"adult\",\n                type: {\n                    name: \"Composite\",\n                    className: \"AdultInfo\"\n                }\n            },\n            color: {\n                serializedName: \"color\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ColorInfo\"\n                }\n            },\n            imageType: {\n                serializedName: \"imageType\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ImageType\"\n                }\n            },\n            tags: {\n                nullable: true,\n                serializedName: \"tags\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ImageTag\"\n                        }\n                    }\n                }\n            },\n            description: {\n                serializedName: \"description\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ImageDescriptionDetails\"\n                }\n            },\n            faces: {\n                nullable: true,\n                serializedName: \"faces\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"FaceDescription\"\n                        }\n                    }\n                }\n            },\n            objects: {\n                nullable: true,\n                serializedName: \"objects\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"DetectedObject\"\n                        }\n                    }\n                }\n            },\n            brands: {\n                nullable: true,\n                serializedName: \"brands\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"DetectedBrand\"\n                        }\n                    }\n                }\n            },\n            requestId: {\n                nullable: true,\n                serializedName: \"requestId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ImageMetadata\"\n                }\n            },\n            modelVersion: {\n                serializedName: \"modelVersion\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ImageDescription = {\n    serializedName: \"ImageDescription\",\n    type: {\n        name: \"Composite\",\n        className: \"ImageDescription\",\n        modelProperties: {\n            tags: {\n                nullable: true,\n                serializedName: \"description.tags\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            },\n            captions: {\n                nullable: true,\n                serializedName: \"description.captions\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ImageCaption\"\n                        }\n                    }\n                }\n            },\n            requestId: {\n                nullable: true,\n                serializedName: \"requestId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ImageMetadata\"\n                }\n            },\n            modelVersion: {\n                serializedName: \"modelVersion\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var DetectResult = {\n    serializedName: \"DetectResult\",\n    type: {\n        name: \"Composite\",\n        className: \"DetectResult\",\n        modelProperties: {\n            objects: {\n                nullable: true,\n                readOnly: true,\n                serializedName: \"objects\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"DetectedObject\"\n                        }\n                    }\n                }\n            },\n            requestId: {\n                nullable: true,\n                serializedName: \"requestId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ImageMetadata\"\n                }\n            },\n            modelVersion: {\n                serializedName: \"modelVersion\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ModelDescription = {\n    serializedName: \"ModelDescription\",\n    type: {\n        name: \"Composite\",\n        className: \"ModelDescription\",\n        modelProperties: {\n            name: {\n                nullable: true,\n                serializedName: \"name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            categories: {\n                nullable: true,\n                serializedName: \"categories\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ListModelsResult = {\n    serializedName: \"ListModelsResult\",\n    type: {\n        name: \"Composite\",\n        className: \"ListModelsResult\",\n        modelProperties: {\n            modelsProperty: {\n                nullable: true,\n                readOnly: true,\n                serializedName: \"models\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ModelDescription\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var DomainModelResults = {\n    serializedName: \"DomainModelResults\",\n    type: {\n        name: \"Composite\",\n        className: \"DomainModelResults\",\n        modelProperties: {\n            result: {\n                serializedName: \"result\",\n                type: {\n                    name: \"Object\"\n                }\n            },\n            requestId: {\n                nullable: true,\n                serializedName: \"requestId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ImageMetadata\"\n                }\n            },\n            modelVersion: {\n                serializedName: \"modelVersion\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var OcrWord = {\n    serializedName: \"OcrWord\",\n    type: {\n        name: \"Composite\",\n        className: \"OcrWord\",\n        modelProperties: {\n            boundingBox: {\n                nullable: true,\n                serializedName: \"boundingBox\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            text: {\n                nullable: true,\n                serializedName: \"text\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var OcrLine = {\n    serializedName: \"OcrLine\",\n    type: {\n        name: \"Composite\",\n        className: \"OcrLine\",\n        modelProperties: {\n            boundingBox: {\n                nullable: true,\n                serializedName: \"boundingBox\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            words: {\n                nullable: true,\n                serializedName: \"words\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"OcrWord\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var OcrRegion = {\n    serializedName: \"OcrRegion\",\n    type: {\n        name: \"Composite\",\n        className: \"OcrRegion\",\n        modelProperties: {\n            boundingBox: {\n                nullable: true,\n                serializedName: \"boundingBox\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lines: {\n                nullable: true,\n                serializedName: \"lines\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"OcrLine\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var OcrResult = {\n    serializedName: \"OcrResult\",\n    type: {\n        name: \"Composite\",\n        className: \"OcrResult\",\n        modelProperties: {\n            language: {\n                nullable: true,\n                serializedName: \"language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            textAngle: {\n                nullable: false,\n                serializedName: \"textAngle\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            orientation: {\n                nullable: true,\n                serializedName: \"orientation\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            regions: {\n                nullable: true,\n                serializedName: \"regions\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"OcrRegion\"\n                        }\n                    }\n                }\n            },\n            modelVersion: {\n                serializedName: \"modelVersion\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var TagResult = {\n    serializedName: \"TagResult\",\n    type: {\n        name: \"Composite\",\n        className: \"TagResult\",\n        modelProperties: {\n            tags: {\n                nullable: true,\n                serializedName: \"tags\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ImageTag\"\n                        }\n                    }\n                }\n            },\n            requestId: {\n                nullable: true,\n                serializedName: \"requestId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ImageMetadata\"\n                }\n            },\n            modelVersion: {\n                serializedName: \"modelVersion\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var AreaOfInterestResult = {\n    serializedName: \"AreaOfInterestResult\",\n    type: {\n        name: \"Composite\",\n        className: \"AreaOfInterestResult\",\n        modelProperties: {\n            areaOfInterest: {\n                readOnly: true,\n                serializedName: \"areaOfInterest\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BoundingRect\"\n                }\n            },\n            requestId: {\n                nullable: true,\n                serializedName: \"requestId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            metadata: {\n                serializedName: \"metadata\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ImageMetadata\"\n                }\n            },\n            modelVersion: {\n                serializedName: \"modelVersion\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ImageUrl = {\n    serializedName: \"ImageUrl\",\n    type: {\n        name: \"Composite\",\n        className: \"ImageUrl\",\n        modelProperties: {\n            url: {\n                required: true,\n                serializedName: \"url\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ComputerVisionInnerError = {\n    serializedName: \"ComputerVisionInnerError\",\n    type: {\n        name: \"Composite\",\n        className: \"ComputerVisionInnerError\",\n        modelProperties: {\n            code: {\n                required: true,\n                serializedName: \"code\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            message: {\n                required: true,\n                serializedName: \"message\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ComputerVisionError = {\n    serializedName: \"ComputerVisionError\",\n    type: {\n        name: \"Composite\",\n        className: \"ComputerVisionError\",\n        modelProperties: {\n            code: {\n                required: true,\n                serializedName: \"code\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            message: {\n                required: true,\n                serializedName: \"message\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            innererror: {\n                serializedName: \"innererror\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ComputerVisionInnerError\"\n                }\n            }\n        }\n    }\n};\nexport var ComputerVisionErrorResponse = {\n    serializedName: \"ComputerVisionErrorResponse\",\n    type: {\n        name: \"Composite\",\n        className: \"ComputerVisionErrorResponse\",\n        modelProperties: {\n            error: {\n                required: true,\n                serializedName: \"error\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ComputerVisionError\"\n                }\n            }\n        }\n    }\n};\nexport var Style = {\n    serializedName: \"Style\",\n    type: {\n        name: \"Composite\",\n        className: \"Style\",\n        modelProperties: {\n            name: {\n                required: true,\n                serializedName: \"name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            confidence: {\n                required: true,\n                serializedName: \"confidence\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var Appearance = {\n    serializedName: \"Appearance\",\n    type: {\n        name: \"Composite\",\n        className: \"Appearance\",\n        modelProperties: {\n            style: {\n                required: true,\n                serializedName: \"style\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Style\"\n                }\n            }\n        }\n    }\n};\nexport var Word = {\n    serializedName: \"Word\",\n    type: {\n        name: \"Composite\",\n        className: \"Word\",\n        modelProperties: {\n            boundingBox: {\n                required: true,\n                serializedName: \"boundingBox\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Number\"\n                        }\n                    }\n                }\n            },\n            text: {\n                required: true,\n                serializedName: \"text\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            confidence: {\n                required: true,\n                serializedName: \"confidence\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var Line = {\n    serializedName: \"Line\",\n    type: {\n        name: \"Composite\",\n        className: \"Line\",\n        modelProperties: {\n            language: {\n                serializedName: \"language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            boundingBox: {\n                required: true,\n                serializedName: \"boundingBox\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Number\"\n                        }\n                    }\n                }\n            },\n            appearance: {\n                serializedName: \"appearance\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Appearance\"\n                }\n            },\n            text: {\n                required: true,\n                serializedName: \"text\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            words: {\n                required: true,\n                serializedName: \"words\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"Word\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ReadResult = {\n    serializedName: \"ReadResult\",\n    type: {\n        name: \"Composite\",\n        className: \"ReadResult\",\n        modelProperties: {\n            page: {\n                required: true,\n                serializedName: \"page\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            language: {\n                serializedName: \"language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            angle: {\n                required: true,\n                serializedName: \"angle\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            width: {\n                required: true,\n                serializedName: \"width\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            height: {\n                required: true,\n                serializedName: \"height\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            unit: {\n                required: true,\n                nullable: false,\n                serializedName: \"unit\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pixel\",\n                        \"inch\"\n                    ]\n                }\n            },\n            lines: {\n                required: true,\n                serializedName: \"lines\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"Line\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var AnalyzeResults = {\n    serializedName: \"analyzeResults\",\n    type: {\n        name: \"Composite\",\n        className: \"AnalyzeResults\",\n        modelProperties: {\n            version: {\n                required: true,\n                serializedName: \"version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            modelVersion: {\n                required: true,\n                serializedName: \"modelVersion\",\n                constraints: {\n                    Pattern: /^(latest|\\d{4}-\\d{2}-\\d{2})(-preview)?$/\n                },\n                type: {\n                    name: \"String\"\n                }\n            },\n            readResults: {\n                required: true,\n                serializedName: \"readResults\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ReadResult\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ReadOperationResult = {\n    serializedName: \"ReadOperationResult\",\n    type: {\n        name: \"Composite\",\n        className: \"ReadOperationResult\",\n        modelProperties: {\n            status: {\n                nullable: false,\n                serializedName: \"status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"notStarted\",\n                        \"running\",\n                        \"failed\",\n                        \"succeeded\"\n                    ]\n                }\n            },\n            createdDateTime: {\n                nullable: false,\n                serializedName: \"createdDateTime\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastUpdatedDateTime: {\n                nullable: false,\n                serializedName: \"lastUpdatedDateTime\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            analyzeResult: {\n                serializedName: \"analyzeResult\",\n                type: {\n                    name: \"Composite\",\n                    className: \"AnalyzeResults\"\n                }\n            }\n        }\n    }\n};\nexport var ComputerVisionOcrError = {\n    serializedName: \"ComputerVisionOcrError\",\n    type: {\n        name: \"Composite\",\n        className: \"ComputerVisionOcrError\",\n        modelProperties: {\n            code: {\n                required: true,\n                serializedName: \"code\",\n                type: {\n                    name: \"Object\"\n                }\n            },\n            message: {\n                required: true,\n                serializedName: \"message\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"requestId\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ReadHeaders = {\n    serializedName: \"read-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ReadHeaders\",\n        modelProperties: {\n            operationLocation: {\n                serializedName: \"operation-location\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ReadInStreamHeaders = {\n    serializedName: \"readinstream-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ReadInStreamHeaders\",\n        modelProperties: {\n            operationLocation: {\n                serializedName: \"operation-location\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\n//# sourceMappingURL=mappers.js.map","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nexport var descriptionExclude = {\n    parameterPath: [\n        \"options\",\n        \"descriptionExclude\"\n    ],\n    mapper: {\n        serializedName: \"descriptionExclude\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Celebrities\",\n                        \"Landmarks\"\n                    ]\n                }\n            }\n        }\n    },\n    collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport var details = {\n    parameterPath: [\n        \"options\",\n        \"details\"\n    ],\n    mapper: {\n        serializedName: \"details\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Celebrities\",\n                        \"Landmarks\"\n                    ]\n                }\n            }\n        }\n    },\n    collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport var detectOrientation = {\n    parameterPath: \"detectOrientation\",\n    mapper: {\n        required: true,\n        serializedName: \"detectOrientation\",\n        defaultValue: true,\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport var endpoint = {\n    parameterPath: \"endpoint\",\n    mapper: {\n        required: true,\n        serializedName: \"Endpoint\",\n        defaultValue: '',\n        type: {\n            name: \"String\"\n        }\n    },\n    skipEncoding: true\n};\nexport var height = {\n    parameterPath: \"height\",\n    mapper: {\n        required: true,\n        serializedName: \"height\",\n        constraints: {\n            InclusiveMaximum: 1024,\n            InclusiveMinimum: 1\n        },\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var language0 = {\n    parameterPath: [\n        \"options\",\n        \"language\"\n    ],\n    mapper: {\n        serializedName: \"language\",\n        defaultValue: 'en',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var language1 = {\n    parameterPath: [\n        \"options\",\n        \"language\"\n    ],\n    mapper: {\n        serializedName: \"language\",\n        defaultValue: 'unk',\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"unk\",\n                \"zh-Hans\",\n                \"zh-Hant\",\n                \"cs\",\n                \"da\",\n                \"nl\",\n                \"en\",\n                \"fi\",\n                \"fr\",\n                \"de\",\n                \"el\",\n                \"hu\",\n                \"it\",\n                \"ja\",\n                \"ko\",\n                \"nb\",\n                \"pl\",\n                \"pt\",\n                \"ru\",\n                \"es\",\n                \"sv\",\n                \"tr\",\n                \"ar\",\n                \"ro\",\n                \"sr-Cyrl\",\n                \"sr-Latn\",\n                \"sk\"\n            ]\n        }\n    }\n};\nexport var language2 = {\n    parameterPath: [\n        \"options\",\n        \"language\"\n    ],\n    mapper: {\n        serializedName: \"language\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var maxCandidates = {\n    parameterPath: [\n        \"options\",\n        \"maxCandidates\"\n    ],\n    mapper: {\n        serializedName: \"maxCandidates\",\n        defaultValue: 1,\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var model = {\n    parameterPath: \"model\",\n    mapper: {\n        required: true,\n        serializedName: \"model\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var modelVersion = {\n    parameterPath: [\n        \"options\",\n        \"modelVersion\"\n    ],\n    mapper: {\n        serializedName: \"model-version\",\n        defaultValue: 'latest',\n        constraints: {\n            Pattern: /^(latest|\\d{4}-\\d{2}-\\d{2})(-preview)?$/\n        },\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var operationId = {\n    parameterPath: \"operationId\",\n    mapper: {\n        required: true,\n        serializedName: \"operationId\",\n        type: {\n            name: \"Uuid\"\n        }\n    }\n};\nexport var pages = {\n    parameterPath: [\n        \"options\",\n        \"pages\"\n    ],\n    mapper: {\n        serializedName: \"pages\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    },\n    collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport var readingOrder = {\n    parameterPath: [\n        \"options\",\n        \"readingOrder\"\n    ],\n    mapper: {\n        serializedName: \"readingOrder\",\n        defaultValue: 'basic',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var smartCropping = {\n    parameterPath: [\n        \"options\",\n        \"smartCropping\"\n    ],\n    mapper: {\n        serializedName: \"smartCropping\",\n        defaultValue: false,\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport var visualFeatures = {\n    parameterPath: [\n        \"options\",\n        \"visualFeatures\"\n    ],\n    mapper: {\n        serializedName: \"visualFeatures\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"ImageType\",\n                        \"Faces\",\n                        \"Adult\",\n                        \"Categories\",\n                        \"Color\",\n                        \"Tags\",\n                        \"Description\",\n                        \"Objects\",\n                        \"Brands\"\n                    ]\n                }\n            }\n        }\n    },\n    collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport var width = {\n    parameterPath: \"width\",\n    mapper: {\n        required: true,\n        serializedName: \"width\",\n        constraints: {\n            InclusiveMaximum: 1024,\n            InclusiveMinimum: 1\n        },\n        type: {\n            name: \"Number\"\n        }\n    }\n};\n//# sourceMappingURL=parameters.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\n//# sourceMappingURL=tokenCredential.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { HttpHeaders } from \"../httpHeaders\";\n/**\n * Authenticates to a service using an API key.\n */\nvar ApiKeyCredentials = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {object} options   Specifies the options to be provided for auth. Either header or query needs to be provided.\n     */\n    function ApiKeyCredentials(options) {\n        if (!options || (options && !options.inHeader && !options.inQuery)) {\n            throw new Error(\"options cannot be null or undefined. Either \\\"inHeader\\\" or \\\"inQuery\\\" property of the options object needs to be provided.\");\n        }\n        this.inHeader = options.inHeader;\n        this.inQuery = options.inQuery;\n    }\n    /**\n     * Signs a request with the values provided in the inHeader and inQuery parameter.\n     *\n     * @param {WebResource} webResource The WebResource to be signed.\n     * @returns {Promise<WebResource>} The signed request object.\n     */\n    ApiKeyCredentials.prototype.signRequest = function (webResource) {\n        if (!webResource) {\n            return Promise.reject(new Error(\"webResource cannot be null or undefined and must be of type \\\"object\\\".\"));\n        }\n        if (this.inHeader) {\n            if (!webResource.headers) {\n                webResource.headers = new HttpHeaders();\n            }\n            for (var headerName in this.inHeader) {\n                webResource.headers.set(headerName, this.inHeader[headerName]);\n            }\n        }\n        if (this.inQuery) {\n            if (!webResource.url) {\n                return Promise.reject(new Error(\"url cannot be null in the request object.\"));\n            }\n            if (webResource.url.indexOf(\"?\") < 0) {\n                webResource.url += \"?\";\n            }\n            for (var key in this.inQuery) {\n                if (!webResource.url.endsWith(\"?\")) {\n                    webResource.url += \"&\";\n                }\n                webResource.url += key + \"=\" + this.inQuery[key];\n            }\n        }\n        return Promise.resolve(webResource);\n    };\n    return ApiKeyCredentials;\n}());\nexport { ApiKeyCredentials };\n//# sourceMappingURL=apiKeyCredentials.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __awaiter, __generator } from \"tslib\";\nimport { Constants as MSRestConstants } from \"../util/constants\";\nvar DEFAULT_AUTHORIZATION_SCHEME = \"Bearer\";\n/**\n * Resource manager endpoints to match in order to specify a valid scope to the AzureIdentityCredentialAdapter.\n */\nexport var azureResourceManagerEndpoints = [\n    \"https://management.windows.net\",\n    \"https://management.chinacloudapi.cn\",\n    \"https://management.usgovcloudapi.net\",\n    \"https://management.cloudapi.de\",\n];\n/**\n * This class provides a simple extension to use {@link TokenCredential} from `@azure/identity` library to\n * use with legacy Azure SDKs that accept {@link ServiceClientCredentials} family of credentials for authentication.\n */\nvar AzureIdentityCredentialAdapter = /** @class */ (function () {\n    function AzureIdentityCredentialAdapter(azureTokenCredential, scopes) {\n        if (scopes === void 0) { scopes = \"https://management.azure.com/.default\"; }\n        this.azureTokenCredential = azureTokenCredential;\n        this.scopes = scopes;\n    }\n    AzureIdentityCredentialAdapter.prototype.getToken = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var accessToken, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.azureTokenCredential.getToken(this.scopes)];\n                    case 1:\n                        accessToken = _a.sent();\n                        if (accessToken !== null) {\n                            result = {\n                                accessToken: accessToken.token,\n                                tokenType: DEFAULT_AUTHORIZATION_SCHEME,\n                                expiresOn: accessToken.expiresOnTimestamp,\n                            };\n                            return [2 /*return*/, result];\n                        }\n                        else {\n                            throw new Error(\"Could find token for scope\");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    AzureIdentityCredentialAdapter.prototype.signRequest = function (webResource) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tokenResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getToken()];\n                    case 1:\n                        tokenResponse = _a.sent();\n                        webResource.headers.set(MSRestConstants.HeaderConstants.AUTHORIZATION, tokenResponse.tokenType + \" \" + tokenResponse.accessToken);\n                        return [2 /*return*/, Promise.resolve(webResource)];\n                }\n            });\n        });\n    };\n    return AzureIdentityCredentialAdapter;\n}());\nexport { AzureIdentityCredentialAdapter };\n//# sourceMappingURL=azureIdentityTokenCredentialAdapter.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName) {\n    return headerName.toLowerCase();\n}\nexport function isHttpHeadersLike(object) {\n    if (!object || typeof object !== \"object\") {\n        return false;\n    }\n    if (typeof object.rawHeaders === \"function\" &&\n        typeof object.clone === \"function\" &&\n        typeof object.get === \"function\" &&\n        typeof object.set === \"function\" &&\n        typeof object.contains === \"function\" &&\n        typeof object.remove === \"function\" &&\n        typeof object.headersArray === \"function\" &&\n        typeof object.headerValues === \"function\" &&\n        typeof object.headerNames === \"function\" &&\n        typeof object.toJson === \"function\") {\n        return true;\n    }\n    return false;\n}\n/**\n * A collection of HTTP header key/value pairs.\n */\nvar HttpHeaders = /** @class */ (function () {\n    function HttpHeaders(rawHeaders) {\n        this._headersMap = {};\n        if (rawHeaders) {\n            for (var headerName in rawHeaders) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param headerName The name of the header to set. This value is case-insensitive.\n     * @param headerValue The value of the header to set.\n     */\n    HttpHeaders.prototype.set = function (headerName, headerValue) {\n        this._headersMap[getHeaderKey(headerName)] = {\n            name: headerName,\n            value: headerValue.toString(),\n        };\n    };\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param headerName The name of the header.\n     */\n    HttpHeaders.prototype.get = function (headerName) {\n        var header = this._headersMap[getHeaderKey(headerName)];\n        return !header ? undefined : header.value;\n    };\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     */\n    HttpHeaders.prototype.contains = function (headerName) {\n        return !!this._headersMap[getHeaderKey(headerName)];\n    };\n    /**\n     * Remove the header with the provided headerName. Return whether or not the header existed and\n     * was removed.\n     * @param headerName The name of the header to remove.\n     */\n    HttpHeaders.prototype.remove = function (headerName) {\n        var result = this.contains(headerName);\n        delete this._headersMap[getHeaderKey(headerName)];\n        return result;\n    };\n    /**\n     * Get the headers that are contained this collection as an object.\n     */\n    HttpHeaders.prototype.rawHeaders = function () {\n        var result = {};\n        for (var headerKey in this._headersMap) {\n            var header = this._headersMap[headerKey];\n            result[header.name.toLowerCase()] = header.value;\n        }\n        return result;\n    };\n    /**\n     * Get the headers that are contained in this collection as an array.\n     */\n    HttpHeaders.prototype.headersArray = function () {\n        var headers = [];\n        for (var headerKey in this._headersMap) {\n            headers.push(this._headersMap[headerKey]);\n        }\n        return headers;\n    };\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    HttpHeaders.prototype.headerNames = function () {\n        var headerNames = [];\n        var headers = this.headersArray();\n        for (var i = 0; i < headers.length; ++i) {\n            headerNames.push(headers[i].name);\n        }\n        return headerNames;\n    };\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    HttpHeaders.prototype.headerValues = function () {\n        var headerValues = [];\n        var headers = this.headersArray();\n        for (var i = 0; i < headers.length; ++i) {\n            headerValues.push(headers[i].value);\n        }\n        return headerValues;\n    };\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    HttpHeaders.prototype.toJson = function () {\n        return this.rawHeaders();\n    };\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    HttpHeaders.prototype.toString = function () {\n        return JSON.stringify(this.toJson());\n    };\n    /**\n     * Create a deep clone/copy of this HttpHeaders collection.\n     */\n    HttpHeaders.prototype.clone = function () {\n        return new HttpHeaders(this.rawHeaders());\n    };\n    return HttpHeaders;\n}());\nexport { HttpHeaders };\n//# sourceMappingURL=httpHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * The different levels of logs that can be used with the HttpPipelineLogger.\n */\nexport var HttpPipelineLogLevel;\n(function (HttpPipelineLogLevel) {\n    /**\n     * A log level that indicates that no logs will be logged.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n    /**\n     * An error log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    /**\n     * A warning log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n    /**\n     * An information log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));\n//# sourceMappingURL=httpPipelineLogLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter) {\n    return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\nexport function getPathStringFromParameterPath(parameterPath, mapper) {\n    var result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=operationParameter.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { MapperType } from \"./serializer\";\nexport function isStreamOperation(operationSpec) {\n    var result = false;\n    for (var statusCode in operationSpec.responses) {\n        var operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === MapperType.Stream) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=operationSpec.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nvar agentNotSupportedInBrowser = new Error(\"AgentPolicy is not supported in browser environment\");\nexport function agentPolicy(_agentSettings) {\n    return {\n        create: function (_nextPolicy, _options) {\n            throw agentNotSupportedInBrowser;\n        },\n    };\n}\nvar AgentPolicy = /** @class */ (function (_super) {\n    __extends(AgentPolicy, _super);\n    function AgentPolicy(nextPolicy, options) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        throw agentNotSupportedInBrowser;\n        return _this;\n    }\n    AgentPolicy.prototype.sendRequest = function (_request) {\n        throw agentNotSupportedInBrowser;\n    };\n    return AgentPolicy;\n}(BaseRequestPolicy));\nexport { AgentPolicy };\n//# sourceMappingURL=agentPolicy.browser.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __awaiter, __extends, __generator } from \"tslib\";\nimport { isStreamOperation } from \"../operationSpec\";\nimport { RestError } from \"../restError\";\nimport { MapperType } from \"../serializer\";\nimport * as utils from \"../util/utils\";\nimport { parseXML } from \"../util/xml\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nexport function deserializationPolicy(deserializationContentTypes) {\n    return {\n        create: function (nextPolicy, options) {\n            return new DeserializationPolicy(nextPolicy, deserializationContentTypes, options);\n        },\n    };\n}\nexport var defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nexport var defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nvar DeserializationPolicy = /** @class */ (function (_super) {\n    __extends(DeserializationPolicy, _super);\n    function DeserializationPolicy(nextPolicy, deserializationContentTypes, options) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.jsonContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.json) || defaultJsonContentTypes;\n        _this.xmlContentTypes =\n            (deserializationContentTypes && deserializationContentTypes.xml) || defaultXmlContentTypes;\n        return _this;\n    }\n    DeserializationPolicy.prototype.sendRequest = function (request) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._nextPolicy\n                        .sendRequest(request)\n                        .then(function (response) {\n                        return deserializeResponseBody(_this.jsonContentTypes, _this.xmlContentTypes, response);\n                    })];\n            });\n        });\n    };\n    return DeserializationPolicy;\n}(BaseRequestPolicy));\nexport { DeserializationPolicy };\nfunction getOperationResponse(parsedResponse) {\n    var result;\n    var request = parsedResponse.request;\n    var operationSpec = request.operationSpec;\n    if (operationSpec) {\n        var operationResponseGetter = request.operationResponseGetter;\n        if (!operationResponseGetter) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    var shouldDeserialize = parsedResponse.request.shouldDeserialize;\n    var result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\nexport function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response) {\n    return parse(jsonContentTypes, xmlContentTypes, response).then(function (parsedResponse) {\n        var shouldDeserialize = shouldDeserializeResponse(parsedResponse);\n        if (shouldDeserialize) {\n            var operationSpec = parsedResponse.request.operationSpec;\n            if (operationSpec && operationSpec.responses) {\n                var statusCode = parsedResponse.status;\n                var expectedStatusCodes = Object.keys(operationSpec.responses);\n                var hasNoExpectedStatusCodes = expectedStatusCodes.length === 0 ||\n                    (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\");\n                var responseSpec = getOperationResponse(parsedResponse);\n                var isExpectedStatusCode = hasNoExpectedStatusCodes\n                    ? 200 <= statusCode && statusCode < 300\n                    : !!responseSpec;\n                if (!isExpectedStatusCode) {\n                    var defaultResponseSpec = operationSpec.responses.default;\n                    if (defaultResponseSpec) {\n                        var initialErrorMessage = isStreamOperation(operationSpec)\n                            ? \"Unexpected status code: \" + statusCode\n                            : parsedResponse.bodyAsText;\n                        var error = new RestError(initialErrorMessage);\n                        error.statusCode = statusCode;\n                        error.request = utils.stripRequest(parsedResponse.request);\n                        error.response = utils.stripResponse(parsedResponse);\n                        var parsedErrorResponse = parsedResponse.parsedBody;\n                        try {\n                            if (parsedErrorResponse) {\n                                var defaultResponseBodyMapper = defaultResponseSpec.bodyMapper;\n                                if (defaultResponseBodyMapper &&\n                                    defaultResponseBodyMapper.serializedName === \"CloudError\") {\n                                    if (parsedErrorResponse.error) {\n                                        parsedErrorResponse = parsedErrorResponse.error;\n                                    }\n                                    if (parsedErrorResponse.code) {\n                                        error.code = parsedErrorResponse.code;\n                                    }\n                                    if (parsedErrorResponse.message) {\n                                        error.message = parsedErrorResponse.message;\n                                    }\n                                }\n                                else {\n                                    var internalError = parsedErrorResponse;\n                                    if (parsedErrorResponse.error) {\n                                        internalError = parsedErrorResponse.error;\n                                    }\n                                    error.code = internalError.code;\n                                    if (internalError.message) {\n                                        error.message = internalError.message;\n                                    }\n                                }\n                                if (defaultResponseBodyMapper) {\n                                    var valueToDeserialize = parsedErrorResponse;\n                                    if (operationSpec.isXML &&\n                                        defaultResponseBodyMapper.type.name === MapperType.Sequence) {\n                                        valueToDeserialize =\n                                            typeof parsedErrorResponse === \"object\"\n                                                ? parsedErrorResponse[defaultResponseBodyMapper.xmlElementName]\n                                                : [];\n                                    }\n                                    error.body = operationSpec.serializer.deserialize(defaultResponseBodyMapper, valueToDeserialize, \"error.body\");\n                                }\n                            }\n                        }\n                        catch (defaultError) {\n                            error.message = \"Error \\\"\" + defaultError.message + \"\\\" occurred in deserializing the responseBody - \\\"\" + parsedResponse.bodyAsText + \"\\\" for the default response.\";\n                        }\n                        return Promise.reject(error);\n                    }\n                }\n                else if (responseSpec) {\n                    if (responseSpec.bodyMapper) {\n                        var valueToDeserialize = parsedResponse.parsedBody;\n                        if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperType.Sequence) {\n                            valueToDeserialize =\n                                typeof valueToDeserialize === \"object\"\n                                    ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                                    : [];\n                        }\n                        try {\n                            parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\");\n                        }\n                        catch (error) {\n                            var restError = new RestError(\"Error \" + error + \" occurred in deserializing the responseBody - \" + parsedResponse.bodyAsText);\n                            restError.request = utils.stripRequest(parsedResponse.request);\n                            restError.response = utils.stripResponse(parsedResponse);\n                            return Promise.reject(restError);\n                        }\n                    }\n                    else if (operationSpec.httpMethod === \"HEAD\") {\n                        // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n                        parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n                    }\n                    if (responseSpec.headersMapper) {\n                        parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\");\n                    }\n                }\n            }\n        }\n        return Promise.resolve(parsedResponse);\n    });\n}\nfunction parse(jsonContentTypes, xmlContentTypes, operationResponse) {\n    var errorHandler = function (err) {\n        var msg = \"Error \\\"\" + err + \"\\\" occurred while parsing the response body - \" + operationResponse.bodyAsText + \".\";\n        var errCode = err.code || RestError.PARSE_ERROR;\n        var e = new RestError(msg, errCode, operationResponse.status, operationResponse.request, operationResponse, operationResponse.bodyAsText);\n        return Promise.reject(e);\n    };\n    if (!operationResponse.request.streamResponseBody && operationResponse.bodyAsText) {\n        var text_1 = operationResponse.bodyAsText;\n        var contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        var contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map(function (component) { return component.toLowerCase(); });\n        if (contentComponents.length === 0 ||\n            contentComponents.some(function (component) { return jsonContentTypes.indexOf(component) !== -1; })) {\n            return new Promise(function (resolve) {\n                operationResponse.parsedBody = JSON.parse(text_1);\n                resolve(operationResponse);\n            }).catch(errorHandler);\n        }\n        else if (contentComponents.some(function (component) { return xmlContentTypes.indexOf(component) !== -1; })) {\n            return parseXML(text_1)\n                .then(function (body) {\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            })\n                .catch(errorHandler);\n        }\n    }\n    return Promise.resolve(operationResponse);\n}\n//# sourceMappingURL=deserializationPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nimport { RestError } from \"../restError\";\nexport function exponentialRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n    return {\n        create: function (nextPolicy, options) {\n            return new ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n        },\n    };\n}\nvar DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nvar DEFAULT_CLIENT_RETRY_COUNT = 3;\nvar DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nvar DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nvar ExponentialRetryPolicy = /** @class */ (function (_super) {\n    __extends(ExponentialRetryPolicy, _super);\n    /**\n     * @constructor\n     * @param {RequestPolicy} nextPolicy The next RequestPolicy in the pipeline chain.\n     * @param {RequestPolicyOptionsLike} options The options for this RequestPolicy.\n     * @param {number} [retryCount]        The client retry count.\n     * @param {number} [retryInterval]     The client retry interval, in milliseconds.\n     * @param {number} [minRetryInterval]  The minimum retry interval, in milliseconds.\n     * @param {number} [maxRetryInterval]  The maximum retry interval, in milliseconds.\n     */\n    function ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        function isNumber(n) {\n            return typeof n === \"number\";\n        }\n        _this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n        _this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n        _this.minRetryInterval = isNumber(minRetryInterval)\n            ? minRetryInterval\n            : DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n        _this.maxRetryInterval = isNumber(maxRetryInterval)\n            ? maxRetryInterval\n            : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n        return _this;\n    }\n    ExponentialRetryPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then(function (response) { return retry(_this, request, response); })\n            .catch(function (error) { return retry(_this, request, error.response, undefined, error); });\n    };\n    return ExponentialRetryPolicy;\n}(BaseRequestPolicy));\nexport { ExponentialRetryPolicy };\n/**\n * Determines if the operation should be retried and how long to wait until the next retry.\n *\n * @param {ExponentialRetryPolicy} policy The ExponentialRetryPolicy that this function is being called against.\n * @param {number} statusCode The HTTP status code.\n * @param {RetryData} retryData  The retry data.\n * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n */\nfunction shouldRetry(policy, statusCode, retryData) {\n    if (statusCode == undefined ||\n        (statusCode < 500 && statusCode !== 408) ||\n        statusCode === 501 ||\n        statusCode === 505) {\n        return false;\n    }\n    var currentCount;\n    if (!retryData) {\n        throw new Error(\"retryData for the ExponentialRetryPolicyFilter cannot be null.\");\n    }\n    else {\n        currentCount = retryData && retryData.retryCount;\n    }\n    return currentCount < policy.retryCount;\n}\n/**\n * Updates the retry data for the next attempt.\n *\n * @param {ExponentialRetryPolicy} policy The ExponentialRetryPolicy that this function is being called against.\n * @param {RetryData} retryData  The retry data.\n * @param {RetryError} [err] The operation\"s error, if any.\n */\nfunction updateRetryData(policy, retryData, err) {\n    if (!retryData) {\n        retryData = {\n            retryCount: 0,\n            retryInterval: 0,\n        };\n    }\n    if (err) {\n        if (retryData.error) {\n            err.innerError = retryData.error;\n        }\n        retryData.error = err;\n    }\n    // Adjust retry count\n    retryData.retryCount++;\n    // Adjust retry interval\n    var incrementDelta = Math.pow(2, retryData.retryCount) - 1;\n    var boundedRandDelta = policy.retryInterval * 0.8 +\n        Math.floor(Math.random() * (policy.retryInterval * 1.2 - policy.retryInterval * 0.8));\n    incrementDelta *= boundedRandDelta;\n    retryData.retryInterval = Math.min(policy.minRetryInterval + incrementDelta, policy.maxRetryInterval);\n    return retryData;\n}\nfunction retry(policy, request, response, retryData, requestError) {\n    retryData = updateRetryData(policy, retryData, requestError);\n    var isAborted = request.abortSignal && request.abortSignal.aborted;\n    if (!isAborted && shouldRetry(policy, response && response.status, retryData)) {\n        return utils\n            .delay(retryData.retryInterval)\n            .then(function () { return policy._nextPolicy.sendRequest(request.clone()); })\n            .then(function (res) { return retry(policy, request, res, retryData, undefined); })\n            .catch(function (err) { return retry(policy, request, response, retryData, err); });\n    }\n    else if (isAborted || requestError || !response) {\n        // If the operation failed in the end, return all errors instead of just the last one\n        var err = retryData.error ||\n            new RestError(\"Failed to send the request.\", RestError.REQUEST_SEND_ERROR, response && response.status, response && response.request, response);\n        return Promise.reject(err);\n    }\n    else {\n        return Promise.resolve(response);\n    }\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nexport function generateClientRequestIdPolicy(requestIdHeaderName) {\n    if (requestIdHeaderName === void 0) { requestIdHeaderName = \"x-ms-client-request-id\"; }\n    return {\n        create: function (nextPolicy, options) {\n            return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n        },\n    };\n}\nvar GenerateClientRequestIdPolicy = /** @class */ (function (_super) {\n    __extends(GenerateClientRequestIdPolicy, _super);\n    function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this._requestIdHeaderName = _requestIdHeaderName;\n        return _this;\n    }\n    GenerateClientRequestIdPolicy.prototype.sendRequest = function (request) {\n        if (!request.headers.contains(this._requestIdHeaderName)) {\n            request.headers.set(this._requestIdHeaderName, utils.generateUuid());\n        }\n        return this._nextPolicy.sendRequest(request);\n    };\n    return GenerateClientRequestIdPolicy;\n}(BaseRequestPolicy));\nexport { GenerateClientRequestIdPolicy };\n//# sourceMappingURL=generateClientRequestIdPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nexport function getDefaultUserAgentKey() {\n    return \"x-ms-command-name\";\n}\nexport function getPlatformSpecificData() {\n    var navigator = self.navigator;\n    var osInfo = {\n        key: \"OS\",\n        value: (navigator.oscpu || navigator.platform).replace(\" \", \"\"),\n    };\n    return [osInfo];\n}\n//# sourceMappingURL=msRestUserAgentPolicy.browser.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nvar proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nexport function getDefaultProxySettings(_proxyUrl) {\n    return undefined;\n}\nexport function proxyPolicy(_proxySettings) {\n    return {\n        create: function (_nextPolicy, _options) {\n            throw proxyNotSupportedInBrowser;\n        },\n    };\n}\nvar ProxyPolicy = /** @class */ (function (_super) {\n    __extends(ProxyPolicy, _super);\n    function ProxyPolicy(nextPolicy, options) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        throw proxyNotSupportedInBrowser;\n        return _this;\n    }\n    ProxyPolicy.prototype.sendRequest = function (_request) {\n        throw proxyNotSupportedInBrowser;\n    };\n    return ProxyPolicy;\n}(BaseRequestPolicy));\nexport { ProxyPolicy };\n//# sourceMappingURL=proxyPolicy.browser.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { URLBuilder } from \"../url\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nexport var DefaultRedirectOptions = {\n    handleRedirects: true,\n    maxRetries: 20,\n};\nexport function redirectPolicy(maximumRetries) {\n    if (maximumRetries === void 0) { maximumRetries = 20; }\n    return {\n        create: function (nextPolicy, options) {\n            return new RedirectPolicy(nextPolicy, options, maximumRetries);\n        },\n    };\n}\nvar RedirectPolicy = /** @class */ (function (_super) {\n    __extends(RedirectPolicy, _super);\n    function RedirectPolicy(nextPolicy, options, maxRetries) {\n        if (maxRetries === void 0) { maxRetries = 20; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.maxRetries = maxRetries;\n        return _this;\n    }\n    RedirectPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy\n            .sendRequest(request)\n            .then(function (response) { return handleRedirect(_this, response, 0); });\n    };\n    return RedirectPolicy;\n}(BaseRequestPolicy));\nexport { RedirectPolicy };\nfunction handleRedirect(policy, response, currentRetries) {\n    var request = response.request, status = response.status;\n    var locationHeader = response.headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && [\"GET\", \"HEAD\"].includes(request.method)) ||\n            (status === 302 && [\"GET\", \"POST\", \"HEAD\"].includes(request.method)) ||\n            (status === 303 && \"POST\" === request.method) ||\n            status === 307) &&\n        ((request.redirectLimit !== undefined && currentRetries < request.redirectLimit) ||\n            (request.redirectLimit === undefined && currentRetries < policy.maxRetries))) {\n        var builder = URLBuilder.parse(request.url);\n        builder.setPath(locationHeader);\n        request.url = builder.toString();\n        // POST request with Status code 302 and 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        // reference: https://tools.ietf.org/html/rfc7231#page-57 && https://fetch.spec.whatwg.org/#http-redirect-fetch\n        if ((status === 302 || status === 303) && request.method === \"POST\") {\n            request.method = \"GET\";\n            delete request.body;\n        }\n        return policy._nextPolicy\n            .sendRequest(request)\n            .then(function (res) { return handleRedirect(policy, res, currentRetries + 1); })\n            .then(function (res) { return recordRedirect(res, request.url); });\n    }\n    return Promise.resolve(response);\n}\nfunction recordRedirect(response, redirect) {\n    // This is called as the recursive calls to handleRedirect() unwind,\n    // only record the deepest/last redirect\n    if (!response.redirected) {\n        response.redirected = true;\n        response.url = redirect;\n    }\n    return response;\n}\n//# sourceMappingURL=redirectPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { HttpPipelineLogLevel } from \"../httpPipelineLogLevel\";\nvar BaseRequestPolicy = /** @class */ (function () {\n    function BaseRequestPolicy(_nextPolicy, _options) {\n        this._nextPolicy = _nextPolicy;\n        this._options = _options;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    BaseRequestPolicy.prototype.shouldLog = function (logLevel) {\n        return this._options.shouldLog(logLevel);\n    };\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meat the logger's threshold, then nothing will be logged.\n     * @param logLevel The log level of this log.\n     * @param message The message of this log.\n     */\n    BaseRequestPolicy.prototype.log = function (logLevel, message) {\n        this._options.log(logLevel, message);\n    };\n    return BaseRequestPolicy;\n}());\nexport { BaseRequestPolicy };\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nvar RequestPolicyOptions = /** @class */ (function () {\n    function RequestPolicyOptions(_logger) {\n        this._logger = _logger;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    RequestPolicyOptions.prototype.shouldLog = function (logLevel) {\n        return (!!this._logger &&\n            logLevel !== HttpPipelineLogLevel.OFF &&\n            logLevel <= this._logger.minimumLogLevel);\n    };\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meat the logger's threshold, then nothing will be logged.\n     * @param logLevel The log level of this log.\n     * @param message The message of this log.\n     */\n    RequestPolicyOptions.prototype.log = function (logLevel, message) {\n        if (this._logger && this.shouldLog(logLevel)) {\n            this._logger.log(logLevel, message);\n        }\n    };\n    return RequestPolicyOptions;\n}());\nexport { RequestPolicyOptions };\n//# sourceMappingURL=requestPolicy.js.map","import { __extends } from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nexport function rpRegistrationPolicy(retryTimeout) {\n    if (retryTimeout === void 0) { retryTimeout = 30; }\n    return {\n        create: function (nextPolicy, options) {\n            return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n        },\n    };\n}\nvar RPRegistrationPolicy = /** @class */ (function (_super) {\n    __extends(RPRegistrationPolicy, _super);\n    function RPRegistrationPolicy(nextPolicy, options, _retryTimeout) {\n        if (_retryTimeout === void 0) { _retryTimeout = 30; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this._retryTimeout = _retryTimeout;\n        return _this;\n    }\n    RPRegistrationPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .then(function (response) { return registerIfNeeded(_this, request, response); });\n    };\n    return RPRegistrationPolicy;\n}(BaseRequestPolicy));\nexport { RPRegistrationPolicy };\nfunction registerIfNeeded(policy, request, response) {\n    if (response.status === 409) {\n        var rpName = checkRPNotRegisteredError(response.bodyAsText);\n        if (rpName) {\n            var urlPrefix = extractSubscriptionUrl(request.url);\n            return (registerRP(policy, urlPrefix, rpName, request)\n                // Autoregistration of ${provider} failed for some reason. We will not return this error\n                // instead will return the initial response with 409 status code back to the user.\n                // do nothing here as we are returning the original response at the end of this method.\n                .catch(function () { return false; })\n                .then(function (registrationStatus) {\n                if (registrationStatus) {\n                    // Retry the original request. We have to change the x-ms-client-request-id\n                    // otherwise Azure endpoint will return the initial 409 (cached) response.\n                    request.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n                    return policy._nextPolicy.sendRequest(request.clone());\n                }\n                return response;\n            }));\n        }\n    }\n    return Promise.resolve(response);\n}\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param {WebResourceLike} originalRequest The original request\n * @param {boolean} reuseUrlToo Should the url from the original request be reused as well. Default false.\n * @returns {object} A new request object with desired headers.\n */\nfunction getRequestEssentials(originalRequest, reuseUrlToo) {\n    if (reuseUrlToo === void 0) { reuseUrlToo = false; }\n    var reqOptions = originalRequest.clone();\n    if (reuseUrlToo) {\n        reqOptions.url = originalRequest.url;\n    }\n    // We have to change the x-ms-client-request-id otherwise Azure endpoint\n    // will return the initial 409 (cached) response.\n    reqOptions.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n    // Set content-type to application/json\n    reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n    return reqOptions;\n}\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param {string} body The response body received after making the original request.\n * @returns {string} The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body) {\n    var result, responseBody;\n    if (body) {\n        try {\n            responseBody = JSON.parse(body);\n        }\n        catch (err) {\n            // do nothing;\n        }\n        if (responseBody &&\n            responseBody.error &&\n            responseBody.error.message &&\n            responseBody.error.code &&\n            responseBody.error.code === \"MissingSubscriptionRegistration\") {\n            var matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n            if (matchRes) {\n                result = matchRes.pop();\n            }\n        }\n    }\n    return result;\n}\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} url The original request url\n * @returns {string} The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url) {\n    var result;\n    var matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//gi);\n    if (matchRes && matchRes[0]) {\n        result = matchRes[0];\n    }\n    else {\n        throw new Error(\"Unable to extract subscriptionId from the given url - \" + url + \".\");\n    }\n    return result;\n}\n/**\n * Registers the given provider.\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} urlPrefix https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} provider The provider name to be registered.\n * @param {WebResourceLike} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @param {registrationCallback} callback The callback that handles the RP registration\n */\nfunction registerRP(policy, urlPrefix, provider, originalRequest) {\n    var postUrl = urlPrefix + \"providers/\" + provider + \"/register?api-version=2016-02-01\";\n    var getUrl = urlPrefix + \"providers/\" + provider + \"?api-version=2016-02-01\";\n    var reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.method = \"POST\";\n    reqOptions.url = postUrl;\n    return policy._nextPolicy.sendRequest(reqOptions).then(function (response) {\n        if (response.status !== 200) {\n            throw new Error(\"Autoregistration of \" + provider + \" failed. Please try registering manually.\");\n        }\n        return getRegistrationStatus(policy, getUrl, originalRequest);\n    });\n}\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} url The request url for polling\n * @param {WebResourceLike} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns {Promise<boolean>} True if RP Registration is successful.\n */\nfunction getRegistrationStatus(policy, url, originalRequest) {\n    var reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.url = url;\n    reqOptions.method = \"GET\";\n    return policy._nextPolicy.sendRequest(reqOptions).then(function (res) {\n        var obj = res.parsedBody;\n        if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n            return true;\n        }\n        else {\n            return utils\n                .delay(policy._retryTimeout * 1000)\n                .then(function () { return getRegistrationStatus(policy, url, originalRequest); });\n        }\n    });\n}\n//# sourceMappingURL=rpRegistrationPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nexport function signingPolicy(authenticationProvider) {\n    return {\n        create: function (nextPolicy, options) {\n            return new SigningPolicy(nextPolicy, options, authenticationProvider);\n        },\n    };\n}\nvar SigningPolicy = /** @class */ (function (_super) {\n    __extends(SigningPolicy, _super);\n    function SigningPolicy(nextPolicy, options, authenticationProvider) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.authenticationProvider = authenticationProvider;\n        return _this;\n    }\n    SigningPolicy.prototype.signRequest = function (request) {\n        return this.authenticationProvider.signRequest(request);\n    };\n    SigningPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this.signRequest(request).then(function (nextRequest) {\n            return _this._nextPolicy.sendRequest(nextRequest);\n        });\n    };\n    return SigningPolicy;\n}(BaseRequestPolicy));\nexport { SigningPolicy };\n//# sourceMappingURL=signingPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __awaiter, __extends, __generator } from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nexport function systemErrorRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n    return {\n        create: function (nextPolicy, options) {\n            return new SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n        },\n    };\n}\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n *\n * @constructor\n * @param {number} retryCount        The client retry count.\n * @param {number} retryInterval     The client retry interval, in milliseconds.\n * @param {number} minRetryInterval  The minimum retry interval, in milliseconds.\n * @param {number} maxRetryInterval  The maximum retry interval, in milliseconds.\n */\nvar SystemErrorRetryPolicy = /** @class */ (function (_super) {\n    __extends(SystemErrorRetryPolicy, _super);\n    function SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\n        _this.DEFAULT_CLIENT_RETRY_COUNT = 3;\n        _this.DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\n        _this.DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n        _this.retryCount = typeof retryCount === \"number\" ? retryCount : _this.DEFAULT_CLIENT_RETRY_COUNT;\n        _this.retryInterval =\n            typeof retryInterval === \"number\" ? retryInterval : _this.DEFAULT_CLIENT_RETRY_INTERVAL;\n        _this.minRetryInterval =\n            typeof minRetryInterval === \"number\"\n                ? minRetryInterval\n                : _this.DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n        _this.maxRetryInterval =\n            typeof maxRetryInterval === \"number\"\n                ? maxRetryInterval\n                : _this.DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n        return _this;\n    }\n    SystemErrorRetryPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy\n            .sendRequest(request.clone())\n            .catch(function (error) { return retry(_this, request, error.response, error); });\n    };\n    return SystemErrorRetryPolicy;\n}(BaseRequestPolicy));\nexport { SystemErrorRetryPolicy };\n/**\n * Determines if the operation should be retried and how long to wait until the next retry.\n *\n * @param {number} statusCode The HTTP status code.\n * @param {RetryData} retryData  The retry data.\n * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n */\nfunction shouldRetry(policy, retryData) {\n    var currentCount;\n    if (!retryData) {\n        throw new Error(\"retryData for the SystemErrorRetryPolicyFilter cannot be null.\");\n    }\n    else {\n        currentCount = retryData && retryData.retryCount;\n    }\n    return currentCount < policy.retryCount;\n}\n/**\n * Updates the retry data for the next attempt.\n *\n * @param {RetryData} retryData  The retry data.\n * @param {object} err        The operation\"s error, if any.\n */\nfunction updateRetryData(policy, retryData, err) {\n    if (!retryData) {\n        retryData = {\n            retryCount: 0,\n            retryInterval: 0,\n        };\n    }\n    if (err) {\n        if (retryData.error) {\n            err.innerError = retryData.error;\n        }\n        retryData.error = err;\n    }\n    // Adjust retry count\n    retryData.retryCount++;\n    // Adjust retry interval\n    var incrementDelta = Math.pow(2, retryData.retryCount) - 1;\n    var boundedRandDelta = policy.retryInterval * 0.8 + Math.floor(Math.random() * (policy.retryInterval * 0.4));\n    incrementDelta *= boundedRandDelta;\n    retryData.retryInterval = Math.min(policy.minRetryInterval + incrementDelta, policy.maxRetryInterval);\n    return retryData;\n}\nfunction retry(policy, request, operationResponse, err, retryData) {\n    return __awaiter(this, void 0, void 0, function () {\n        var error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    retryData = updateRetryData(policy, retryData, err);\n                    if (!(err &&\n                        err.code &&\n                        shouldRetry(policy, retryData) &&\n                        (err.code === \"ETIMEDOUT\" ||\n                            err.code === \"ESOCKETTIMEDOUT\" ||\n                            err.code === \"ECONNREFUSED\" ||\n                            err.code === \"ECONNRESET\" ||\n                            err.code === \"ENOENT\"))) return [3 /*break*/, 5];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, utils.delay(retryData.retryInterval)];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/, policy._nextPolicy.sendRequest(request.clone())];\n                case 3:\n                    error_1 = _a.sent();\n                    return [2 /*return*/, retry(policy, request, operationResponse, error_1, retryData)];\n                case 4: return [3 /*break*/, 6];\n                case 5:\n                    if (err) {\n                        // If the operation failed in the end, return all errors instead of just the last one\n                        return [2 /*return*/, Promise.reject(retryData.error)];\n                    }\n                    return [2 /*return*/, operationResponse];\n                case 6: return [2 /*return*/];\n            }\n        });\n    });\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __awaiter, __extends, __generator } from \"tslib\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nimport { Constants } from \"../util/constants\";\nimport { delay } from \"../util/utils\";\nvar StatusCodes = Constants.HttpConstants.StatusCodes;\nvar DEFAULT_RETRY_COUNT = 3;\nexport function throttlingRetryPolicy(maxRetries) {\n    if (maxRetries === void 0) { maxRetries = DEFAULT_RETRY_COUNT; }\n    return {\n        create: function (nextPolicy, options) {\n            return new ThrottlingRetryPolicy(nextPolicy, options, maxRetries);\n        },\n    };\n}\n/**\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nvar ThrottlingRetryPolicy = /** @class */ (function (_super) {\n    __extends(ThrottlingRetryPolicy, _super);\n    function ThrottlingRetryPolicy(nextPolicy, options, retryLimit) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.retryLimit = retryLimit;\n        return _this;\n    }\n    ThrottlingRetryPolicy.prototype.sendRequest = function (httpRequest) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this._nextPolicy.sendRequest(httpRequest.clone()).then(function (response) {\n                        return _this.retry(httpRequest, response, 0);\n                    })];\n            });\n        });\n    };\n    ThrottlingRetryPolicy.prototype.retry = function (httpRequest, httpResponse, retryCount) {\n        return __awaiter(this, void 0, void 0, function () {\n            var retryAfterHeader, delayInMs, res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (httpResponse.status !== StatusCodes.TooManyRequests) {\n                            return [2 /*return*/, httpResponse];\n                        }\n                        retryAfterHeader = httpResponse.headers.get(Constants.HeaderConstants.RETRY_AFTER);\n                        if (!(retryAfterHeader && retryCount < this.retryLimit)) return [3 /*break*/, 3];\n                        delayInMs = ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterHeader);\n                        if (!delayInMs) return [3 /*break*/, 3];\n                        return [4 /*yield*/, delay(delayInMs)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this._nextPolicy.sendRequest(httpRequest)];\n                    case 2:\n                        res = _a.sent();\n                        return [2 /*return*/, this.retry(httpRequest, res, retryCount + 1)];\n                    case 3: return [2 /*return*/, httpResponse];\n                }\n            });\n        });\n    };\n    ThrottlingRetryPolicy.parseRetryAfterHeader = function (headerValue) {\n        var retryAfterInSeconds = Number(headerValue);\n        if (Number.isNaN(retryAfterInSeconds)) {\n            return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n        }\n        else {\n            return retryAfterInSeconds * 1000;\n        }\n    };\n    ThrottlingRetryPolicy.parseDateRetryAfterHeader = function (headerValue) {\n        try {\n            var now = Date.now();\n            var date = Date.parse(headerValue);\n            var diff = date - now;\n            return Number.isNaN(diff) ? undefined : diff;\n        }\n        catch (error) {\n            return undefined;\n        }\n    };\n    return ThrottlingRetryPolicy;\n}(BaseRequestPolicy));\nexport { ThrottlingRetryPolicy };\n//# sourceMappingURL=throttlingRetryPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { Constants } from \"../util/constants\";\nimport { getDefaultUserAgentKey, getPlatformSpecificData } from \"./msRestUserAgentPolicy\";\nimport { BaseRequestPolicy, } from \"./requestPolicy\";\nfunction getRuntimeInfo() {\n    var msRestRuntime = {\n        key: \"ms-rest-js\",\n        value: Constants.msRestVersion,\n    };\n    return [msRestRuntime];\n}\nfunction getUserAgentString(telemetryInfo, keySeparator, valueSeparator) {\n    if (keySeparator === void 0) { keySeparator = \" \"; }\n    if (valueSeparator === void 0) { valueSeparator = \"/\"; }\n    return telemetryInfo\n        .map(function (info) {\n        var value = info.value ? \"\" + valueSeparator + info.value : \"\";\n        return \"\" + info.key + value;\n    })\n        .join(keySeparator);\n}\nexport var getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\nexport function getDefaultUserAgentValue() {\n    var runtimeInfo = getRuntimeInfo();\n    var platformSpecificData = getPlatformSpecificData();\n    var userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n    return userAgent;\n}\nexport function userAgentPolicy(userAgentData) {\n    var key = !userAgentData || userAgentData.key == undefined ? getDefaultUserAgentKey() : userAgentData.key;\n    var value = !userAgentData || userAgentData.value == undefined\n        ? getDefaultUserAgentValue()\n        : userAgentData.value;\n    return {\n        create: function (nextPolicy, options) {\n            return new UserAgentPolicy(nextPolicy, options, key, value);\n        },\n    };\n}\nvar UserAgentPolicy = /** @class */ (function (_super) {\n    __extends(UserAgentPolicy, _super);\n    function UserAgentPolicy(_nextPolicy, _options, headerKey, headerValue) {\n        var _this = _super.call(this, _nextPolicy, _options) || this;\n        _this._nextPolicy = _nextPolicy;\n        _this._options = _options;\n        _this.headerKey = headerKey;\n        _this.headerValue = headerValue;\n        return _this;\n    }\n    UserAgentPolicy.prototype.sendRequest = function (request) {\n        this.addUserAgentHeader(request);\n        return this._nextPolicy.sendRequest(request);\n    };\n    UserAgentPolicy.prototype.addUserAgentHeader = function (request) {\n        if (!request.headers) {\n            request.headers = new HttpHeaders();\n        }\n        if (!request.headers.get(this.headerKey) && this.headerValue) {\n            request.headers.set(this.headerKey, this.headerValue);\n        }\n    };\n    return UserAgentPolicy;\n}(BaseRequestPolicy));\nexport { UserAgentPolicy };\n//# sourceMappingURL=userAgentPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport var QueryCollectionFormat;\n(function (QueryCollectionFormat) {\n    QueryCollectionFormat[\"Csv\"] = \",\";\n    QueryCollectionFormat[\"Ssv\"] = \" \";\n    QueryCollectionFormat[\"Tsv\"] = \"\\t\";\n    QueryCollectionFormat[\"Pipes\"] = \"|\";\n    QueryCollectionFormat[\"Multi\"] = \"Multi\";\n})(QueryCollectionFormat || (QueryCollectionFormat = {}));\n//# sourceMappingURL=queryCollectionFormat.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nvar RestError = /** @class */ (function (_super) {\n    __extends(RestError, _super);\n    function RestError(message, code, statusCode, request, response, body) {\n        var _this = _super.call(this, message) || this;\n        _this.code = code;\n        _this.statusCode = statusCode;\n        _this.request = request;\n        _this.response = response;\n        _this.body = body;\n        Object.setPrototypeOf(_this, RestError.prototype);\n        return _this;\n    }\n    RestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n    RestError.REQUEST_ABORTED_ERROR = \"REQUEST_ABORTED_ERROR\";\n    RestError.PARSE_ERROR = \"PARSE_ERROR\";\n    return RestError;\n}(Error));\nexport { RestError };\n//# sourceMappingURL=restError.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as base64 from \"./util/base64\";\nimport * as utils from \"./util/utils\";\nvar Serializer = /** @class */ (function () {\n    function Serializer(modelMappers, isXML) {\n        if (modelMappers === void 0) { modelMappers = {}; }\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    Serializer.prototype.validateConstraints = function (mapper, value, objectName) {\n        var failValidation = function (constraintName, constraintValue) {\n            throw new Error(\"\\\"\" + objectName + \"\\\" with value \\\"\" + value + \"\\\" should satisfy the constraint \\\"\" + constraintName + \"\\\": \" + constraintValue + \".\");\n        };\n        if (mapper.constraints && value != undefined) {\n            var _a = mapper.constraints, ExclusiveMaximum = _a.ExclusiveMaximum, ExclusiveMinimum = _a.ExclusiveMinimum, InclusiveMaximum = _a.InclusiveMaximum, InclusiveMinimum = _a.InclusiveMinimum, MaxItems = _a.MaxItems, MaxLength = _a.MaxLength, MinItems = _a.MinItems, MinLength = _a.MinLength, MultipleOf = _a.MultipleOf, Pattern = _a.Pattern, UniqueItems = _a.UniqueItems;\n            if (ExclusiveMaximum != undefined && value >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum != undefined && value <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum != undefined && value > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum != undefined && value < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            if (MaxItems != undefined && value.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength != undefined && value.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems != undefined && value.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength != undefined && value.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf != undefined && value % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                var pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                value.some(function (item, i, ar) { return ar.indexOf(item) !== i; })) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    };\n    /**\n     * Serialize the given object based on its metadata defined in the mapper\n     *\n     * @param {Mapper} mapper The mapper which defines the metadata of the serializable object\n     *\n     * @param {object|string|Array|number|boolean|Date|stream} object A valid Javascript object to be serialized\n     *\n     * @param {string} objectName Name of the serialized object\n     *\n     * @returns {object|string|Array|number|boolean|Date|stream} A valid serialized Javascript object\n     */\n    Serializer.prototype.serialize = function (mapper, object, objectName) {\n        var payload = {};\n        var mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/gi) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        var required = mapper.required, nullable = mapper.nullable;\n        if (required && nullable && object === undefined) {\n            throw new Error(objectName + \" cannot be undefined.\");\n        }\n        if (required && !nullable && object == undefined) {\n            throw new Error(objectName + \" cannot be null or undefined.\");\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(objectName + \" cannot be null.\");\n        }\n        if (object == undefined) {\n            payload = object;\n        }\n        else {\n            // Validate Constraints if any\n            this.validateConstraints(mapper, object, objectName);\n            if (mapperType.match(/^any$/gi) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/gi) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/gi) !== null) {\n                var enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/gi) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/gi) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/gi) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/gi) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName);\n            }\n            else if (mapperType.match(/^Dictionary$/gi) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName);\n            }\n            else if (mapperType.match(/^Composite$/gi) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName);\n            }\n        }\n        return payload;\n    };\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper\n     *\n     * @param {object} mapper The mapper which defines the metadata of the serializable object\n     *\n     * @param {object|string|Array|number|boolean|Date|stream} responseBody A valid Javascript entity to be deserialized\n     *\n     * @param {string} objectName Name of the deserialized object\n     *\n     * @returns {object|string|Array|number|boolean|Date|stream} A valid deserialized Javascript object\n     */\n    Serializer.prototype.deserialize = function (mapper, responseBody, objectName) {\n        if (responseBody == undefined) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        var payload;\n        var mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/gi) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName);\n        }\n        else {\n            if (this.isXML) {\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\") and body (\"_\") properties, then just reduce the responseBody value to\n                 * the body (\"_\") property.\n                 */\n                if (responseBody[\"$\"] != undefined && responseBody[\"_\"] != undefined) {\n                    responseBody = responseBody[\"_\"];\n                }\n            }\n            if (mapperType.match(/^Number$/gi) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/gi) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/gi) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/gi) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/gi) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/gi) !== null) {\n                payload = base64.decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/gi) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/gi) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName);\n            }\n            else if (mapperType.match(/^Dictionary$/gi) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    };\n    return Serializer;\n}());\nexport { Serializer };\nfunction trimEnd(str, ch) {\n    var len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(\"Please provide an input of type Uint8Array for converting to Base64Url.\");\n    }\n    // Uint8Array to Base64.\n    var str = base64.encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n    // Base64 to Uint8Array.\n    return base64.decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    var classes = [];\n    var partialclass = \"\";\n    if (prop) {\n        var subwords = prop.split(\".\");\n        for (var _i = 0, subwords_1 = subwords; _i < subwords_1.length; _i++) {\n            var item = subwords_1[_i];\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/gi) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(objectName + \" with value \" + value + \" must be of type number.\");\n            }\n        }\n        else if (typeName.match(/^String$/gi) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(objectName + \" with value \\\"\" + value + \"\\\" must be of type string.\");\n            }\n        }\n        else if (typeName.match(/^Uuid$/gi) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && utils.isValidUuid(value))) {\n                throw new Error(objectName + \" with value \\\"\" + value + \"\\\" must be of type string and a valid uuid.\");\n            }\n        }\n        else if (typeName.match(/^Boolean$/gi) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(objectName + \" with value \" + value + \" must be of type boolean.\");\n            }\n        }\n        else if (typeName.match(/^Stream$/gi) !== null) {\n            var objectType = typeof value;\n            if (objectType !== \"string\" &&\n                objectType !== \"function\" &&\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                !(typeof Blob === \"function\" && value instanceof Blob)) {\n                throw new Error(objectName + \" must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.\");\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(\"Please provide a set of allowedValues to validate \" + objectName + \" as an Enum Type.\");\n    }\n    var isPresent = allowedValues.some(function (item) {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(value + \" is not a valid value for \" + objectName + \". The valid values are: \" + JSON.stringify(allowedValues) + \".\");\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(objectName + \" must be of type Uint8Array.\");\n        }\n        value = base64.encodeByteArray(value);\n    }\n    return value;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(objectName + \" must be of type Uint8Array.\");\n        }\n        value = bufferToBase64Url(value);\n    }\n    return value;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value != undefined) {\n        if (typeName.match(/^Date$/gi) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in ISO8601 format.\");\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/gi) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in ISO8601 format.\");\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/gi) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in RFC-1123 format.\");\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/gi) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in RFC-1123/ISO8601 format \" +\n                    \"for it to be serialized in UnixTime/Epoch format.\");\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/gi) !== null) {\n            if (!utils.isDuration(value)) {\n                throw new Error(objectName + \" must be a string in ISO 8601 format. Instead was \\\"\" + value + \"\\\".\");\n            }\n            value = value;\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName) {\n    if (!Array.isArray(object)) {\n        throw new Error(objectName + \" must be of type Array.\");\n    }\n    var elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(\"element\\\" metadata for an Array must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName + \".\"));\n    }\n    var tempArray = [];\n    for (var i = 0; i < object.length; i++) {\n        tempArray[i] = serializer.serialize(elementType, object[i], objectName);\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName) {\n    if (typeof object !== \"object\") {\n        throw new Error(objectName + \" must be of type object.\");\n    }\n    var valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(\"\\\"value\\\" metadata for a Dictionary must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName + \".\"));\n    }\n    var tempDictionary = {};\n    for (var _i = 0, _a = Object.keys(object); _i < _a.length; _i++) {\n        var key = _a[_i];\n        tempDictionary[key] = serializer.serialize(valueType, object[key], objectName + \".\" + key);\n    }\n    return tempDictionary;\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer the serializer containing the entire set of mappers\n * @param mapper the composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    var modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        var className = mapper.type.className;\n        if (!className) {\n            throw new Error(\"Class name for model \\\"\" + objectName + \"\\\" is not provided in the mapper \\\"\" + JSON.stringify(mapper, undefined, 2) + \"\\\".\");\n        }\n        var modelMapper = serializer.modelMappers[className];\n        if (!modelMapper) {\n            throw new Error(\"mapper() cannot be null or undefined for model \\\"\" + className + \"\\\".\");\n        }\n        modelProps = modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(\"modelProperties cannot be null or undefined in the \" +\n                (\"mapper \\\"\" + JSON.stringify(modelMapper) + \"\\\" of type \\\"\" + className + \"\\\" for object \\\"\" + objectName + \"\\\".\"));\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName) {\n    var _a;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object != undefined) {\n        var payload = {};\n        var modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (var _i = 0, _b = Object.keys(modelProps); _i < _b.length; _i++) {\n            var key = _b[_i];\n            var propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            var propName = void 0;\n            var parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                var paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (var _c = 0, paths_1 = paths; _c < paths_1.length; _c++) {\n                    var pathName = paths_1[_c];\n                    var childObject = parentObject[pathName];\n                    if (childObject == undefined && object[key] != undefined) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject != undefined) {\n                var propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                var toSerialize = object[key];\n                var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    toSerialize == undefined) {\n                    toSerialize = mapper.serializedName;\n                }\n                var serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName);\n                if (serializedValue !== undefined && propName != undefined) {\n                    if (propertyMapper.xmlIsAttribute) {\n                        // $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject.$ = parentObject.$ || {};\n                        parentObject.$[propName] = serializedValue;\n                    }\n                    else if (propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = (_a = {}, _a[propertyMapper.xmlElementName] = serializedValue, _a);\n                    }\n                    else {\n                        parentObject[propName] = serializedValue;\n                    }\n                }\n            }\n        }\n        var additionalPropertiesMapper = mapper.type.additionalProperties;\n        if (additionalPropertiesMapper) {\n            var propNames = Object.keys(modelProps);\n            var _loop_1 = function (clientPropName) {\n                var isAdditionalProperty = propNames.every(function (pn) { return pn !== clientPropName; });\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]');\n                }\n            };\n            for (var clientPropName in object) {\n                _loop_1(clientPropName);\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction isSpecialXmlProperty(propertyName) {\n    return [\"$\", \"_\"].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    var modelProps = resolveModelProperties(serializer, mapper, objectName);\n    var instance = {};\n    var handledPropertyNames = [];\n    for (var _i = 0, _a = Object.keys(modelProps); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var propertyMapper = modelProps[key];\n        var paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        var serializedName = propertyMapper.serializedName, xmlName = propertyMapper.xmlName, xmlElementName = propertyMapper.xmlElementName;\n        var propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        var headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            var dictionary = {};\n            for (var _b = 0, _c = Object.keys(responseBody); _b < _c.length; _b++) {\n                var headerKey = _c[_b];\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody.$) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody.$[xmlName], propertyObjectName);\n            }\n            else {\n                var propertyName = xmlElementName || xmlName || serializedName;\n                var unwrappedProperty = responseBody[propertyName];\n                if (propertyMapper.xmlIsWrapped) {\n                    unwrappedProperty = responseBody[xmlName];\n                    unwrappedProperty = unwrappedProperty && unwrappedProperty[xmlElementName];\n                    var isEmptyWrappedList = unwrappedProperty === undefined;\n                    if (isEmptyWrappedList) {\n                        unwrappedProperty = [];\n                    }\n                }\n                instance[key] = serializer.deserialize(propertyMapper, unwrappedProperty, propertyObjectName);\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            var propertyInstance = void 0;\n            var res = responseBody;\n            // traversing the object step by step.\n            for (var _d = 0, paths_2 = paths; _d < paths_2.length; _d++) {\n                var item = paths_2[_d];\n                if (!res)\n                    break;\n                res = res[item];\n            }\n            propertyInstance = res;\n            var polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                propertyInstance == undefined) {\n                propertyInstance = mapper.serializedName;\n            }\n            var serializedValue = void 0;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                var arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName);\n                // Copy over any properties that have already been added into the instance, where they do\n                // not exist on the newly de-serialized array\n                for (var _e = 0, _f = Object.entries(instance); _e < _f.length; _e++) {\n                    var _g = _f[_e], key_1 = _g[0], value = _g[1];\n                    if (!arrayInstance.hasOwnProperty(key_1)) {\n                        arrayInstance[key_1] = value;\n                    }\n                }\n                instance = arrayInstance;\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    var additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        var isAdditionalProperty = function (responsePropName) {\n            for (var clientPropName in modelProps) {\n                var paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (var responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]');\n            }\n        }\n    }\n    else if (responseBody) {\n        for (var _h = 0, _j = Object.keys(responseBody); _h < _j.length; _h++) {\n            var key = _j[_h];\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName) {\n    /*jshint validthis: true */\n    var value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(\"\\\"value\\\" metadata for a Dictionary must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName));\n    }\n    if (responseBody) {\n        var tempDictionary = {};\n        for (var _i = 0, _a = Object.keys(responseBody); _i < _a.length; _i++) {\n            var key = _a[_i];\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName) {\n    /*jshint validthis: true */\n    var element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(\"element\\\" metadata for an Array must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName));\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        var tempArray = [];\n        for (var i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], objectName + \"[\" + i + \"]\");\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        var discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName != undefined) {\n            var discriminatorValue = object[discriminatorName];\n            if (discriminatorValue != undefined) {\n                var typeName = mapper.type.uberParent || mapper.type.className;\n                var indexDiscriminator = discriminatorValue === typeName\n                    ? discriminatorValue\n                    : typeName + \".\" + discriminatorValue;\n                var polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n// TODO: why is this here?\nexport function serializeObject(toSerialize) {\n    if (toSerialize == undefined)\n        return undefined;\n    if (toSerialize instanceof Uint8Array) {\n        toSerialize = base64.encodeByteArray(toSerialize);\n        return toSerialize;\n    }\n    else if (toSerialize instanceof Date) {\n        return toSerialize.toISOString();\n    }\n    else if (Array.isArray(toSerialize)) {\n        var array = [];\n        for (var i = 0; i < toSerialize.length; i++) {\n            array.push(serializeObject(toSerialize[i]));\n        }\n        return array;\n    }\n    else if (typeof toSerialize === \"object\") {\n        var dictionary = {};\n        for (var property in toSerialize) {\n            dictionary[property] = serializeObject(toSerialize[property]);\n        }\n        return dictionary;\n    }\n    return toSerialize;\n}\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum(o) {\n    var result = {};\n    for (var _i = 0, o_1 = o; _i < o_1.length; _i++) {\n        var key = o_1[_i];\n        result[key] = key;\n    }\n    return result;\n}\nexport var MapperType = strEnum([\n    \"Base64Url\",\n    \"Boolean\",\n    \"ByteArray\",\n    \"Composite\",\n    \"Date\",\n    \"DateTime\",\n    \"DateTimeRfc1123\",\n    \"Dictionary\",\n    \"Enum\",\n    \"Number\",\n    \"Object\",\n    \"Sequence\",\n    \"String\",\n    \"Stream\",\n    \"TimeSpan\",\n    \"UnixTime\",\n]);\n//# sourceMappingURL=serializer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __assign, __spreadArrays } from \"tslib\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { DefaultHttpClient } from \"./defaultHttpClient\";\nimport { getPathStringFromParameter, getPathStringFromParameterPath, } from \"./operationParameter\";\nimport { isStreamOperation } from \"./operationSpec\";\nimport { deserializationPolicy, } from \"./policies/deserializationPolicy\";\nimport { exponentialRetryPolicy } from \"./policies/exponentialRetryPolicy\";\nimport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nimport { userAgentPolicy, getDefaultUserAgentHeaderName, getDefaultUserAgentValue, } from \"./policies/userAgentPolicy\";\nimport { DefaultRedirectOptions, redirectPolicy } from \"./policies/redirectPolicy\";\nimport { RequestPolicyOptions, } from \"./policies/requestPolicy\";\nimport { rpRegistrationPolicy } from \"./policies/rpRegistrationPolicy\";\nimport { signingPolicy } from \"./policies/signingPolicy\";\nimport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { MapperType } from \"./serializer\";\nimport { URLBuilder } from \"./url\";\nimport * as utils from \"./util/utils\";\nimport { stringifyXML } from \"./util/xml\";\nimport { isWebResourceLike, WebResource, } from \"./webResource\";\nimport { agentPolicy } from \"./policies/agentPolicy\";\nimport { proxyPolicy, getDefaultProxySettings } from \"./policies/proxyPolicy\";\nimport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nimport { AzureIdentityCredentialAdapter, azureResourceManagerEndpoints, } from \"./credentials/azureIdentityTokenCredentialAdapter\";\n/**\n * @class\n * Initializes a new instance of the ServiceClient.\n */\nvar ServiceClient = /** @class */ (function () {\n    /**\n     * The ServiceClient constructor\n     * @constructor\n     * @param {ServiceClientCredentials} [credentials] The credentials object used for authentication.\n     * @param {ServiceClientOptions} [options] The service client options that govern the behavior of the client.\n     */\n    function ServiceClient(credentials, options) {\n        if (!options) {\n            options = {};\n        }\n        if (options.baseUri) {\n            this.baseUri = options.baseUri;\n        }\n        var serviceClientCredentials;\n        if (isTokenCredential(credentials)) {\n            var scope = undefined;\n            if ((options === null || options === void 0 ? void 0 : options.baseUri) && azureResourceManagerEndpoints.includes(options === null || options === void 0 ? void 0 : options.baseUri)) {\n                scope = options.baseUri + \"/.default\";\n            }\n            serviceClientCredentials = new AzureIdentityCredentialAdapter(credentials, scope);\n        }\n        else {\n            serviceClientCredentials = credentials;\n        }\n        if (serviceClientCredentials && !serviceClientCredentials.signRequest) {\n            throw new Error(\"credentials argument needs to implement signRequest method\");\n        }\n        this._withCredentials = options.withCredentials || false;\n        this._httpClient = options.httpClient || new DefaultHttpClient();\n        this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n        var requestPolicyFactories;\n        if (Array.isArray(options.requestPolicyFactories)) {\n            requestPolicyFactories = options.requestPolicyFactories;\n        }\n        else {\n            requestPolicyFactories = createDefaultRequestPolicyFactories(serviceClientCredentials, options);\n            if (options.requestPolicyFactories) {\n                var newRequestPolicyFactories = options.requestPolicyFactories(requestPolicyFactories);\n                if (newRequestPolicyFactories) {\n                    requestPolicyFactories = newRequestPolicyFactories;\n                }\n            }\n        }\n        this._requestPolicyFactories = requestPolicyFactories;\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    ServiceClient.prototype.sendRequest = function (options) {\n        if (options === null || options === undefined || typeof options !== \"object\") {\n            throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n        }\n        var httpRequest;\n        try {\n            if (isWebResourceLike(options)) {\n                options.validateRequestProperties();\n                httpRequest = options;\n            }\n            else {\n                httpRequest = new WebResource();\n                httpRequest = httpRequest.prepare(options);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n        var httpPipeline = this._httpClient;\n        if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n            for (var i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n                httpPipeline = this._requestPolicyFactories[i].create(httpPipeline, this._requestPolicyOptions);\n            }\n        }\n        return httpPipeline.sendRequest(httpRequest);\n    };\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @param {OperationArguments} operationArguments The arguments that the HTTP request's templated values will be populated from.\n     * @param {OperationSpec} operationSpec The OperationSpec to use to populate the httpRequest.\n     * @param {ServiceCallback} callback The callback to call when the response is received.\n     */\n    ServiceClient.prototype.sendOperationRequest = function (operationArguments, operationSpec, callback) {\n        if (typeof operationArguments.options === \"function\") {\n            callback = operationArguments.options;\n            operationArguments.options = undefined;\n        }\n        var httpRequest = new WebResource();\n        var result;\n        try {\n            var baseUri = operationSpec.baseUrl || this.baseUri;\n            if (!baseUri) {\n                throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\");\n            }\n            httpRequest.method = operationSpec.httpMethod;\n            httpRequest.operationSpec = operationSpec;\n            var requestUrl = URLBuilder.parse(baseUri);\n            if (operationSpec.path) {\n                requestUrl.appendPath(operationSpec.path);\n            }\n            if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n                for (var _i = 0, _a = operationSpec.urlParameters; _i < _a.length; _i++) {\n                    var urlParameter = _a[_i];\n                    var urlParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, urlParameter, operationSpec.serializer);\n                    urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, getPathStringFromParameter(urlParameter));\n                    if (!urlParameter.skipEncoding) {\n                        urlParameterValue = encodeURIComponent(urlParameterValue);\n                    }\n                    requestUrl.replaceAll(\"{\" + (urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)) + \"}\", urlParameterValue);\n                }\n            }\n            if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n                for (var _b = 0, _c = operationSpec.queryParameters; _b < _c.length; _b++) {\n                    var queryParameter = _c[_b];\n                    var queryParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, queryParameter, operationSpec.serializer);\n                    if (queryParameterValue != undefined) {\n                        queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, getPathStringFromParameter(queryParameter));\n                        if (queryParameter.collectionFormat != undefined) {\n                            if (queryParameter.collectionFormat === QueryCollectionFormat.Multi) {\n                                if (queryParameterValue.length === 0) {\n                                    queryParameterValue = \"\";\n                                }\n                                else {\n                                    for (var index in queryParameterValue) {\n                                        var item = queryParameterValue[index];\n                                        queryParameterValue[index] = item == undefined ? \"\" : item.toString();\n                                    }\n                                }\n                            }\n                            else if (queryParameter.collectionFormat === QueryCollectionFormat.Ssv ||\n                                queryParameter.collectionFormat === QueryCollectionFormat.Tsv) {\n                                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                            }\n                        }\n                        if (!queryParameter.skipEncoding) {\n                            if (Array.isArray(queryParameterValue)) {\n                                for (var index in queryParameterValue) {\n                                    if (queryParameterValue[index] !== undefined &&\n                                        queryParameterValue[index] !== null) {\n                                        queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                                    }\n                                }\n                            }\n                            else {\n                                queryParameterValue = encodeURIComponent(queryParameterValue);\n                            }\n                        }\n                        if (queryParameter.collectionFormat != undefined &&\n                            queryParameter.collectionFormat !== QueryCollectionFormat.Multi &&\n                            queryParameter.collectionFormat !== QueryCollectionFormat.Ssv &&\n                            queryParameter.collectionFormat !== QueryCollectionFormat.Tsv) {\n                            queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                        }\n                        requestUrl.setQueryParameter(queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter), queryParameterValue);\n                    }\n                }\n            }\n            httpRequest.url = requestUrl.toString();\n            var contentType = operationSpec.contentType || this.requestContentType;\n            if (contentType) {\n                httpRequest.headers.set(\"Content-Type\", contentType);\n            }\n            if (operationSpec.headerParameters) {\n                for (var _d = 0, _e = operationSpec.headerParameters; _d < _e.length; _d++) {\n                    var headerParameter = _e[_d];\n                    var headerValue = getOperationArgumentValueFromParameter(this, operationArguments, headerParameter, operationSpec.serializer);\n                    if (headerValue != undefined) {\n                        headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, getPathStringFromParameter(headerParameter));\n                        var headerCollectionPrefix = headerParameter.mapper\n                            .headerCollectionPrefix;\n                        if (headerCollectionPrefix) {\n                            for (var _f = 0, _g = Object.keys(headerValue); _f < _g.length; _f++) {\n                                var key = _g[_f];\n                                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                            }\n                        }\n                        else {\n                            httpRequest.headers.set(headerParameter.mapper.serializedName ||\n                                getPathStringFromParameter(headerParameter), headerValue);\n                        }\n                    }\n                }\n            }\n            var options = operationArguments.options;\n            if (options) {\n                if (options.customHeaders) {\n                    for (var customHeaderName in options.customHeaders) {\n                        httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n                    }\n                }\n                if (options.abortSignal) {\n                    httpRequest.abortSignal = options.abortSignal;\n                }\n                if (options.timeout) {\n                    httpRequest.timeout = options.timeout;\n                }\n                if (options.onUploadProgress) {\n                    httpRequest.onUploadProgress = options.onUploadProgress;\n                }\n                if (options.onDownloadProgress) {\n                    httpRequest.onDownloadProgress = options.onDownloadProgress;\n                }\n            }\n            httpRequest.withCredentials = this._withCredentials;\n            serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n            if (httpRequest.streamResponseBody == undefined) {\n                httpRequest.streamResponseBody = isStreamOperation(operationSpec);\n            }\n            result = this.sendRequest(httpRequest).then(function (res) {\n                return flattenResponse(res, operationSpec.responses[res.status]);\n            });\n        }\n        catch (error) {\n            result = Promise.reject(error);\n        }\n        var cb = callback;\n        if (cb) {\n            result\n                // tslint:disable-next-line:no-null-keyword\n                .then(function (res) { return cb(null, res._response.parsedBody, res._response.request, res._response); })\n                .catch(function (err) { return cb(err); });\n        }\n        return result;\n    };\n    return ServiceClient;\n}());\nexport { ServiceClient };\nexport function serializeRequestBody(serviceClient, httpRequest, operationArguments, operationSpec) {\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        httpRequest.body = getOperationArgumentValueFromParameter(serviceClient, operationArguments, operationSpec.requestBody, operationSpec.serializer);\n        var bodyMapper = operationSpec.requestBody.mapper;\n        var required = bodyMapper.required, xmlName = bodyMapper.xmlName, xmlElementName = bodyMapper.xmlElementName, serializedName = bodyMapper.serializedName;\n        var typeName = bodyMapper.type.name;\n        try {\n            if (httpRequest.body != undefined || required) {\n                var requestBodyParameterPathString = getPathStringFromParameter(operationSpec.requestBody);\n                httpRequest.body = operationSpec.serializer.serialize(bodyMapper, httpRequest.body, requestBodyParameterPathString);\n                var isStream = typeName === MapperType.Stream;\n                if (operationSpec.isXML) {\n                    if (typeName === MapperType.Sequence) {\n                        httpRequest.body = stringifyXML(utils.prepareXMLRootList(httpRequest.body, xmlElementName || xmlName || serializedName), { rootName: xmlName || serializedName });\n                    }\n                    else if (!isStream) {\n                        httpRequest.body = stringifyXML(httpRequest.body, {\n                            rootName: xmlName || serializedName,\n                        });\n                    }\n                }\n                else if (!isStream) {\n                    httpRequest.body = JSON.stringify(httpRequest.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(\"Error \\\"\" + error.message + \"\\\" occurred in serializing the payload - \" + JSON.stringify(serializedName, undefined, \"  \") + \".\");\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        httpRequest.formData = {};\n        for (var _i = 0, _a = operationSpec.formDataParameters; _i < _a.length; _i++) {\n            var formDataParameter = _a[_i];\n            var formDataParameterValue = getOperationArgumentValueFromParameter(serviceClient, operationArguments, formDataParameter, operationSpec.serializer);\n            if (formDataParameterValue != undefined) {\n                var formDataParameterPropertyName = formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n                httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, getPathStringFromParameter(formDataParameter));\n            }\n        }\n    }\n}\nfunction isRequestPolicyFactory(instance) {\n    return typeof instance.create === \"function\";\n}\nfunction getValueOrFunctionResult(value, defaultValueCreator) {\n    var result;\n    if (typeof value === \"string\") {\n        result = value;\n    }\n    else {\n        result = defaultValueCreator();\n        if (typeof value === \"function\") {\n            result = value(result);\n        }\n    }\n    return result;\n}\nfunction createDefaultRequestPolicyFactories(credentials, options) {\n    var factories = [];\n    if (options.generateClientRequestIdHeader) {\n        factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n    }\n    if (credentials) {\n        if (isRequestPolicyFactory(credentials)) {\n            factories.push(credentials);\n        }\n        else {\n            factories.push(signingPolicy(credentials));\n        }\n    }\n    var userAgentHeaderName = getValueOrFunctionResult(options.userAgentHeaderName, getDefaultUserAgentHeaderName);\n    var userAgentHeaderValue = getValueOrFunctionResult(options.userAgent, getDefaultUserAgentValue);\n    if (userAgentHeaderName && userAgentHeaderValue) {\n        factories.push(userAgentPolicy({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n    }\n    var redirectOptions = __assign(__assign({}, DefaultRedirectOptions), options.redirectOptions);\n    if (redirectOptions.handleRedirects) {\n        factories.push(redirectPolicy(redirectOptions.maxRetries));\n    }\n    factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n    if (!options.noRetryPolicy) {\n        factories.push(exponentialRetryPolicy());\n        factories.push(systemErrorRetryPolicy());\n        factories.push(throttlingRetryPolicy());\n    }\n    factories.push(deserializationPolicy(options.deserializationContentTypes));\n    var proxySettings = options.proxySettings || getDefaultProxySettings();\n    if (proxySettings) {\n        factories.push(proxyPolicy(proxySettings));\n    }\n    if (options.agentSettings) {\n        factories.push(agentPolicy(options.agentSettings));\n    }\n    return factories;\n}\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nexport function getPropertyParent(parent, propertyPath) {\n    if (parent && propertyPath) {\n        var propertyPathLength = propertyPath.length;\n        for (var i = 0; i < propertyPathLength - 1; ++i) {\n            var propertyName = propertyPath[i];\n            if (!parent[propertyName]) {\n                parent[propertyName] = {};\n            }\n            parent = parent[propertyName];\n        }\n    }\n    return parent;\n}\nfunction getOperationArgumentValueFromParameter(serviceClient, operationArguments, parameter, serializer) {\n    return getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameter.parameterPath, parameter.mapper, serializer);\n}\nexport function getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameterPath, parameterMapper, serializer) {\n    var value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                var propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound) {\n                    propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n                }\n                var useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n            // Serialize just for validation purposes.\n            var parameterPathString = getPathStringFromParameterPath(parameterPath, parameterMapper);\n            serializer.serialize(parameterMapper, value, parameterPathString);\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (var propertyName in parameterPath) {\n            var propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            var propertyPath = parameterPath[propertyName];\n            var propertyValue = getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, propertyPath, propertyMapper, serializer);\n            // Serialize just for validation purposes.\n            var propertyPathString = getPathStringFromParameterPath(propertyPath, propertyMapper);\n            serializer.serialize(propertyMapper, propertyValue, propertyPathString);\n            if (propertyValue !== undefined) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    var result = { propertyFound: false };\n    var i = 0;\n    for (; i < parameterPath.length; ++i) {\n        var parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent != undefined && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\nexport function flattenResponse(_response, responseSpec) {\n    var parsedHeaders = _response.parsedHeaders;\n    var bodyMapper = responseSpec && responseSpec.bodyMapper;\n    var addOperationResponse = function (obj) {\n        return Object.defineProperty(obj, \"_response\", {\n            value: _response,\n        });\n    };\n    if (bodyMapper) {\n        var typeName = bodyMapper.type.name;\n        if (typeName === \"Stream\") {\n            return addOperationResponse(__assign(__assign({}, parsedHeaders), { blobBody: _response.blobBody, readableStreamBody: _response.readableStreamBody }));\n        }\n        var modelProperties_1 = (typeName === \"Composite\" && bodyMapper.type.modelProperties) || {};\n        var isPageableResponse = Object.keys(modelProperties_1).some(function (k) { return modelProperties_1[k].serializedName === \"\"; });\n        if (typeName === \"Sequence\" || isPageableResponse) {\n            // We're expecting a sequece(array) make sure that the response body is in the\n            // correct format, if not make it an empty array []\n            var parsedBody = Array.isArray(_response.parsedBody) ? _response.parsedBody : [];\n            var arrayResponse = __spreadArrays(parsedBody);\n            for (var _i = 0, _a = Object.keys(modelProperties_1); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (modelProperties_1[key].serializedName) {\n                    arrayResponse[key] = _response.parsedBody[key];\n                }\n            }\n            if (parsedHeaders) {\n                for (var _b = 0, _c = Object.keys(parsedHeaders); _b < _c.length; _b++) {\n                    var key = _c[_b];\n                    arrayResponse[key] = parsedHeaders[key];\n                }\n            }\n            addOperationResponse(arrayResponse);\n            return arrayResponse;\n        }\n        if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n            return addOperationResponse(__assign(__assign({}, parsedHeaders), _response.parsedBody));\n        }\n    }\n    if (bodyMapper ||\n        _response.request.method === \"HEAD\" ||\n        utils.isPrimitiveType(_response.parsedBody)) {\n        // primitive body types and HEAD booleans\n        return addOperationResponse(__assign(__assign({}, parsedHeaders), { body: _response.parsedBody }));\n    }\n    return addOperationResponse(__assign(__assign({}, parsedHeaders), _response.parsedBody));\n}\n//# sourceMappingURL=serviceClient.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { replaceAll } from \"./util/utils\";\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nvar URLQuery = /** @class */ (function () {\n    function URLQuery() {\n        this._rawQuery = {};\n    }\n    /**\n     * Get whether or not there any query parameters in this URLQuery.\n     */\n    URLQuery.prototype.any = function () {\n        return Object.keys(this._rawQuery).length > 0;\n    };\n    /**\n     * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n     * empty, then this will attempt to remove an existing query parameter with the provided\n     * parameterName.\n     */\n    URLQuery.prototype.set = function (parameterName, parameterValue) {\n        if (parameterName) {\n            if (parameterValue != undefined) {\n                var newValue = Array.isArray(parameterValue) ? parameterValue : parameterValue.toString();\n                this._rawQuery[parameterName] = newValue;\n            }\n            else {\n                delete this._rawQuery[parameterName];\n            }\n        }\n    };\n    /**\n     * Get the value of the query parameter with the provided name. If no parameter exists with the\n     * provided parameter name, then undefined will be returned.\n     */\n    URLQuery.prototype.get = function (parameterName) {\n        return parameterName ? this._rawQuery[parameterName] : undefined;\n    };\n    /**\n     * Get the string representation of this query. The return value will not start with a \"?\".\n     */\n    URLQuery.prototype.toString = function () {\n        var result = \"\";\n        for (var parameterName in this._rawQuery) {\n            if (result) {\n                result += \"&\";\n            }\n            var parameterValue = this._rawQuery[parameterName];\n            if (Array.isArray(parameterValue)) {\n                var parameterStrings = [];\n                for (var _i = 0, parameterValue_1 = parameterValue; _i < parameterValue_1.length; _i++) {\n                    var parameterValueElement = parameterValue_1[_i];\n                    parameterStrings.push(parameterName + \"=\" + parameterValueElement);\n                }\n                result += parameterStrings.join(\"&\");\n            }\n            else {\n                result += parameterName + \"=\" + parameterValue;\n            }\n        }\n        return result;\n    };\n    /**\n     * Parse a URLQuery from the provided text.\n     */\n    URLQuery.parse = function (text) {\n        var result = new URLQuery();\n        if (text) {\n            if (text.startsWith(\"?\")) {\n                text = text.substring(1);\n            }\n            var currentState = \"ParameterName\";\n            var parameterName = \"\";\n            var parameterValue = \"\";\n            for (var i = 0; i < text.length; ++i) {\n                var currentCharacter = text[i];\n                switch (currentState) {\n                    case \"ParameterName\":\n                        switch (currentCharacter) {\n                            case \"=\":\n                                currentState = \"ParameterValue\";\n                                break;\n                            case \"&\":\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                break;\n                            default:\n                                parameterName += currentCharacter;\n                                break;\n                        }\n                        break;\n                    case \"ParameterValue\":\n                        switch (currentCharacter) {\n                            case \"&\":\n                                result.set(parameterName, parameterValue);\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                currentState = \"ParameterName\";\n                                break;\n                            default:\n                                parameterValue += currentCharacter;\n                                break;\n                        }\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n                }\n            }\n            if (currentState === \"ParameterValue\") {\n                result.set(parameterName, parameterValue);\n            }\n        }\n        return result;\n    };\n    return URLQuery;\n}());\nexport { URLQuery };\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nvar URLBuilder = /** @class */ (function () {\n    function URLBuilder() {\n    }\n    /**\n     * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n     * (such as a host, port, path, or query), those parts will be added to this URL as well.\n     */\n    URLBuilder.prototype.setScheme = function (scheme) {\n        if (!scheme) {\n            this._scheme = undefined;\n        }\n        else {\n            this.set(scheme, \"SCHEME\");\n        }\n    };\n    /**\n     * Get the scheme that has been set in this URL.\n     */\n    URLBuilder.prototype.getScheme = function () {\n        return this._scheme;\n    };\n    /**\n     * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n     * port, path, or query), those parts will be added to this URL as well.\n     */\n    URLBuilder.prototype.setHost = function (host) {\n        if (!host) {\n            this._host = undefined;\n        }\n        else {\n            this.set(host, \"SCHEME_OR_HOST\");\n        }\n    };\n    /**\n     * Get the host that has been set in this URL.\n     */\n    URLBuilder.prototype.getHost = function () {\n        return this._host;\n    };\n    /**\n     * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n     * path or query), those parts will be added to this URL as well.\n     */\n    URLBuilder.prototype.setPort = function (port) {\n        if (port == undefined || port === \"\") {\n            this._port = undefined;\n        }\n        else {\n            this.set(port.toString(), \"PORT\");\n        }\n    };\n    /**\n     * Get the port that has been set in this URL.\n     */\n    URLBuilder.prototype.getPort = function () {\n        return this._port;\n    };\n    /**\n     * Set the path for this URL. If the provided path contains a query, then it will be added to\n     * this URL as well.\n     */\n    URLBuilder.prototype.setPath = function (path) {\n        if (!path) {\n            this._path = undefined;\n        }\n        else {\n            var schemeIndex = path.indexOf(\"://\");\n            if (schemeIndex !== -1) {\n                var schemeStart = path.lastIndexOf(\"/\", schemeIndex);\n                // Make sure to only grab the URL part of the path before setting the state back to SCHEME\n                // this will handle cases such as \"/a/b/c/https://microsoft.com\" => \"https://microsoft.com\"\n                this.set(schemeStart === -1 ? path : path.substr(schemeStart + 1), \"SCHEME\");\n            }\n            else {\n                this.set(path, \"PATH\");\n            }\n        }\n    };\n    /**\n     * Append the provided path to this URL's existing path. If the provided path contains a query,\n     * then it will be added to this URL as well.\n     */\n    URLBuilder.prototype.appendPath = function (path) {\n        if (path) {\n            var currentPath = this.getPath();\n            if (currentPath) {\n                if (!currentPath.endsWith(\"/\")) {\n                    currentPath += \"/\";\n                }\n                if (path.startsWith(\"/\")) {\n                    path = path.substring(1);\n                }\n                path = currentPath + path;\n            }\n            this.set(path, \"PATH\");\n        }\n    };\n    /**\n     * Get the path that has been set in this URL.\n     */\n    URLBuilder.prototype.getPath = function () {\n        return this._path;\n    };\n    /**\n     * Set the query in this URL.\n     */\n    URLBuilder.prototype.setQuery = function (query) {\n        if (!query) {\n            this._query = undefined;\n        }\n        else {\n            this._query = URLQuery.parse(query);\n        }\n    };\n    /**\n     * Set a query parameter with the provided name and value in this URL's query. If the provided\n     * query parameter value is undefined or empty, then the query parameter will be removed if it\n     * existed.\n     */\n    URLBuilder.prototype.setQueryParameter = function (queryParameterName, queryParameterValue) {\n        if (queryParameterName) {\n            if (!this._query) {\n                this._query = new URLQuery();\n            }\n            this._query.set(queryParameterName, queryParameterValue);\n        }\n    };\n    /**\n     * Get the value of the query parameter with the provided query parameter name. If no query\n     * parameter exists with the provided name, then undefined will be returned.\n     */\n    URLBuilder.prototype.getQueryParameterValue = function (queryParameterName) {\n        return this._query ? this._query.get(queryParameterName) : undefined;\n    };\n    /**\n     * Get the query in this URL.\n     */\n    URLBuilder.prototype.getQuery = function () {\n        return this._query ? this._query.toString() : undefined;\n    };\n    /**\n     * Set the parts of this URL by parsing the provided text using the provided startState.\n     */\n    URLBuilder.prototype.set = function (text, startState) {\n        var tokenizer = new URLTokenizer(text, startState);\n        while (tokenizer.next()) {\n            var token = tokenizer.current();\n            if (token) {\n                switch (token.type) {\n                    case \"SCHEME\":\n                        this._scheme = token.text || undefined;\n                        break;\n                    case \"HOST\":\n                        this._host = token.text || undefined;\n                        break;\n                    case \"PORT\":\n                        this._port = token.text || undefined;\n                        break;\n                    case \"PATH\":\n                        var tokenPath = token.text || undefined;\n                        if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n                            this._path = tokenPath;\n                        }\n                        break;\n                    case \"QUERY\":\n                        this._query = URLQuery.parse(token.text);\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLTokenType: \" + token.type);\n                }\n            }\n        }\n    };\n    URLBuilder.prototype.toString = function () {\n        var result = \"\";\n        if (this._scheme) {\n            result += this._scheme + \"://\";\n        }\n        if (this._host) {\n            result += this._host;\n        }\n        if (this._port) {\n            result += \":\" + this._port;\n        }\n        if (this._path) {\n            if (!this._path.startsWith(\"/\")) {\n                result += \"/\";\n            }\n            result += this._path;\n        }\n        if (this._query && this._query.any()) {\n            result += \"?\" + this._query.toString();\n        }\n        return result;\n    };\n    /**\n     * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n     * replaceValue.\n     */\n    URLBuilder.prototype.replaceAll = function (searchValue, replaceValue) {\n        if (searchValue) {\n            this.setScheme(replaceAll(this.getScheme(), searchValue, replaceValue));\n            this.setHost(replaceAll(this.getHost(), searchValue, replaceValue));\n            this.setPort(replaceAll(this.getPort(), searchValue, replaceValue));\n            this.setPath(replaceAll(this.getPath(), searchValue, replaceValue));\n            this.setQuery(replaceAll(this.getQuery(), searchValue, replaceValue));\n        }\n    };\n    URLBuilder.parse = function (text) {\n        var result = new URLBuilder();\n        result.set(text, \"SCHEME_OR_HOST\");\n        return result;\n    };\n    return URLBuilder;\n}());\nexport { URLBuilder };\nvar URLToken = /** @class */ (function () {\n    function URLToken(text, type) {\n        this.text = text;\n        this.type = type;\n    }\n    URLToken.scheme = function (text) {\n        return new URLToken(text, \"SCHEME\");\n    };\n    URLToken.host = function (text) {\n        return new URLToken(text, \"HOST\");\n    };\n    URLToken.port = function (text) {\n        return new URLToken(text, \"PORT\");\n    };\n    URLToken.path = function (text) {\n        return new URLToken(text, \"PATH\");\n    };\n    URLToken.query = function (text) {\n        return new URLToken(text, \"QUERY\");\n    };\n    return URLToken;\n}());\nexport { URLToken };\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nexport function isAlphaNumericCharacter(character) {\n    var characterCode = character.charCodeAt(0);\n    return ((48 /* '0' */ <= characterCode && characterCode <= 57) /* '9' */ ||\n        (65 /* 'A' */ <= characterCode && characterCode <= 90) /* 'Z' */ ||\n        (97 /* 'a' */ <= characterCode && characterCode <= 122) /* 'z' */);\n}\n/**\n * A class that tokenizes URL strings.\n */\nvar URLTokenizer = /** @class */ (function () {\n    function URLTokenizer(_text, state) {\n        this._text = _text;\n        this._textLength = _text ? _text.length : 0;\n        this._currentState = state != undefined ? state : \"SCHEME_OR_HOST\";\n        this._currentIndex = 0;\n    }\n    /**\n     * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n     * hasn't started or has finished tokenizing.\n     */\n    URLTokenizer.prototype.current = function () {\n        return this._currentToken;\n    };\n    /**\n     * Advance to the next URLToken and return whether or not a URLToken was found.\n     */\n    URLTokenizer.prototype.next = function () {\n        if (!hasCurrentCharacter(this)) {\n            this._currentToken = undefined;\n        }\n        else {\n            switch (this._currentState) {\n                case \"SCHEME\":\n                    nextScheme(this);\n                    break;\n                case \"SCHEME_OR_HOST\":\n                    nextSchemeOrHost(this);\n                    break;\n                case \"HOST\":\n                    nextHost(this);\n                    break;\n                case \"PORT\":\n                    nextPort(this);\n                    break;\n                case \"PATH\":\n                    nextPath(this);\n                    break;\n                case \"QUERY\":\n                    nextQuery(this);\n                    break;\n                default:\n                    throw new Error(\"Unrecognized URLTokenizerState: \" + this._currentState);\n            }\n        }\n        return !!this._currentToken;\n    };\n    return URLTokenizer;\n}());\nexport { URLTokenizer };\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer) {\n    var result = \"\";\n    if (tokenizer._currentIndex < tokenizer._textLength) {\n        result = tokenizer._text.substring(tokenizer._currentIndex);\n        tokenizer._currentIndex = tokenizer._textLength;\n    }\n    return result;\n}\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer) {\n    return tokenizer._currentIndex < tokenizer._textLength;\n}\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer) {\n    return tokenizer._text[tokenizer._currentIndex];\n}\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer, step) {\n    if (hasCurrentCharacter(tokenizer)) {\n        if (!step) {\n            step = 1;\n        }\n        tokenizer._currentIndex += step;\n    }\n}\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer, charactersToPeek) {\n    var endIndex = tokenizer._currentIndex + charactersToPeek;\n    if (tokenizer._textLength < endIndex) {\n        endIndex = tokenizer._textLength;\n    }\n    return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer, condition) {\n    var result = \"\";\n    while (hasCurrentCharacter(tokenizer)) {\n        var currentCharacter = getCurrentCharacter(tokenizer);\n        if (!condition(currentCharacter)) {\n            break;\n        }\n        else {\n            result += currentCharacter;\n            nextCharacter(tokenizer);\n        }\n    }\n    return result;\n}\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer) {\n    return readWhile(tokenizer, function (character) { return isAlphaNumericCharacter(character); });\n}\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer) {\n    var terminatingCharacters = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        terminatingCharacters[_i - 1] = arguments[_i];\n    }\n    return readWhile(tokenizer, function (character) { return terminatingCharacters.indexOf(character) === -1; });\n}\nfunction nextScheme(tokenizer) {\n    var scheme = readWhileLetterOrDigit(tokenizer);\n    tokenizer._currentToken = URLToken.scheme(scheme);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"HOST\";\n    }\n}\nfunction nextSchemeOrHost(tokenizer) {\n    var schemeOrHost = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        if (peekCharacters(tokenizer, 3) === \"://\") {\n            tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n            tokenizer._currentState = \"HOST\";\n        }\n        else {\n            tokenizer._currentToken = URLToken.host(schemeOrHost);\n            tokenizer._currentState = \"PORT\";\n        }\n    }\n    else {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        if (getCurrentCharacter(tokenizer) === \"/\") {\n            tokenizer._currentState = \"PATH\";\n        }\n        else {\n            tokenizer._currentState = \"QUERY\";\n        }\n    }\n}\nfunction nextHost(tokenizer) {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n        nextCharacter(tokenizer, 3);\n    }\n    var host = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    tokenizer._currentToken = URLToken.host(host);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        tokenizer._currentState = \"PORT\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPort(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \":\") {\n        nextCharacter(tokenizer);\n    }\n    var port = readUntilCharacter(tokenizer, \"/\", \"?\");\n    tokenizer._currentToken = URLToken.port(port);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPath(tokenizer) {\n    var path = readUntilCharacter(tokenizer, \"?\");\n    tokenizer._currentToken = URLToken.path(path);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextQuery(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \"?\") {\n        nextCharacter(tokenizer);\n    }\n    var query = readRemaining(tokenizer);\n    tokenizer._currentToken = URLToken.query(query);\n    tokenizer._currentState = \"DONE\";\n}\n//# sourceMappingURL=url.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * Encodes a string in base64 format.\n * @param value the string to encode\n */\nexport function encodeString(value) {\n    return btoa(value);\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value the Uint8Aray to encode\n */\nexport function encodeByteArray(value) {\n    var str = \"\";\n    for (var i = 0; i < value.length; i++) {\n        str += String.fromCharCode(value[i]);\n    }\n    return btoa(str);\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value the base64 string to decode\n */\nexport function decodeString(value) {\n    var byteString = atob(value);\n    var arr = new Uint8Array(byteString.length);\n    for (var i = 0; i < byteString.length; i++) {\n        arr[i] = byteString.charCodeAt(i);\n    }\n    return arr;\n}\n//# sourceMappingURL=base64.browser.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nexport var Constants = {\n    /**\n     * The ms-rest version\n     * @const\n     * @type {string}\n     */\n    msRestVersion: \"2.6.0\",\n    /**\n     * Specifies HTTP.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTP: \"http:\",\n    /**\n     * Specifies HTTPS.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTPS: \"https:\",\n    /**\n     * Specifies HTTP Proxy.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTP_PROXY: \"HTTP_PROXY\",\n    /**\n     * Specifies HTTPS Proxy.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTPS_PROXY: \"HTTPS_PROXY\",\n    /**\n     * Specifies NO Proxy.\n     */\n    NO_PROXY: \"NO_PROXY\",\n    /**\n     * Specifies ALL Proxy.\n     */\n    ALL_PROXY: \"ALL_PROXY\",\n    HttpConstants: {\n        /**\n         * Http Verbs\n         *\n         * @const\n         * @enum {string}\n         */\n        HttpVerbs: {\n            PUT: \"PUT\",\n            GET: \"GET\",\n            DELETE: \"DELETE\",\n            POST: \"POST\",\n            MERGE: \"MERGE\",\n            HEAD: \"HEAD\",\n            PATCH: \"PATCH\",\n        },\n        StatusCodes: {\n            TooManyRequests: 429,\n        },\n    },\n    /**\n     * Defines constants for use with HTTP headers.\n     */\n    HeaderConstants: {\n        /**\n         * The Authorization header.\n         *\n         * @const\n         * @type {string}\n         */\n        AUTHORIZATION: \"authorization\",\n        AUTHORIZATION_SCHEME: \"Bearer\",\n        /**\n         * The Retry-After response-header field can be used with a 503 (Service\n         * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n         * the service is expected to be unavailable to the requesting client.\n         *\n         * @const\n         * @type {string}\n         */\n        RETRY_AFTER: \"Retry-After\",\n        /**\n         * The UserAgent header.\n         *\n         * @const\n         * @type {string}\n         */\n        USER_AGENT: \"User-Agent\",\n    },\n};\n//# sourceMappingURL=constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Constants } from \"./constants\";\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport var isNode = typeof process !== \"undefined\" &&\n    !!process.version &&\n    !!process.versions &&\n    !!process.versions.node;\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param {object} urlToCheck The url to check\n * @return {boolean} True if the URL is HTTPS; false otherwise.\n */\nexport function urlIsHTTPS(urlToCheck) {\n    return urlToCheck.protocol.toLowerCase() === Constants.HTTPS;\n}\n/**\n * Encodes an URI.\n *\n * @param {string} uri The URI to be encoded.\n * @return {string} The encoded URI.\n */\nexport function encodeUri(uri) {\n    return encodeURIComponent(uri)\n        .replace(/!/g, \"%21\")\n        .replace(/\"/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param {HttpOperationResponse} response The Http Response\n *\n * @return {object} The stripped version of Http Response.\n */\nexport function stripResponse(response) {\n    var strippedResponse = {};\n    strippedResponse.body = response.bodyAsText;\n    strippedResponse.headers = response.headers;\n    strippedResponse.status = response.status;\n    return strippedResponse;\n}\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param {WebResource} request The Http Request object\n *\n * @return {WebResource} The stripped version of Http Request.\n */\nexport function stripRequest(request) {\n    var strippedRequest = request.clone();\n    if (strippedRequest.headers) {\n        strippedRequest.headers.remove(\"authorization\");\n    }\n    return strippedRequest;\n}\n/**\n * Validates the given uuid as a string\n *\n * @param {string} uuid The uuid as a string that needs to be validated\n *\n * @return {boolean} True if the uuid is valid; false otherwise.\n */\nexport function isValidUuid(uuid) {\n    var validUuidRegex = new RegExp(\"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\", \"ig\");\n    return validUuidRegex.test(uuid);\n}\n/**\n * Provides an array of values of an object. For example\n * for a given object { \"a\": \"foo\", \"b\": \"bar\" }, the method returns [\"foo\", \"bar\"].\n *\n * @param {object} obj An object whose properties need to be enumerated so that it\"s values can be provided as an array\n *\n * @return {any[]} An array of values of the given object.\n */\nexport function objectValues(obj) {\n    var result = [];\n    if (obj && obj instanceof Object) {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                result.push(obj[key]);\n            }\n        }\n    }\n    else {\n        throw new Error(\"The provided object \" + JSON.stringify(obj, undefined, 2) + \" is not a valid object that can be \" + \"enumerated to provide its values as an array.\");\n    }\n    return result;\n}\n/**\n * Generated UUID\n *\n * @return {string} RFC4122 v4 UUID.\n */\nexport function generateUuid() {\n    return uuidv4();\n}\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param {Array} promiseFactories An array of promise factories(A function that return a promise)\n *\n * @param {any} [kickstart] Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n *\n * @return A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(promiseFactories, kickstart) {\n    var result = Promise.resolve(kickstart);\n    promiseFactories.forEach(function (promiseFactory) {\n        result = result.then(promiseFactory);\n    });\n    return result;\n}\n/**\n * Merges source object into the target object\n * @param {object} source The object that needs to be merged\n *\n * @param {object} target The object to be merged into\n *\n * @returns {object} Returns the merged target object.\n */\nexport function mergeObjects(source, target) {\n    Object.keys(source).forEach(function (key) {\n        target[key] = source[key];\n    });\n    return target;\n}\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param {number} t The number of milliseconds to be delayed.\n * @param {T} value The value to be resolved with after a timeout of t milliseconds.\n * @returns {Promise<T>} Resolved promise\n */\nexport function delay(t, value) {\n    return new Promise(function (resolve) { return setTimeout(function () { return resolve(value); }, t); });\n}\n/**\n * Converts a Promise to a callback.\n * @param {Promise<any>} promise The Promise to be converted to a callback\n * @returns {Function} A function that takes the callback (cb: Function): void\n * @deprecated generated code should instead depend on responseToBody\n */\nexport function promiseToCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    return function (cb) {\n        promise.then(function (data) {\n            cb(undefined, data);\n        }, function (err) {\n            cb(err);\n        });\n    };\n}\n/**\n * Converts a Promise to a service callback.\n * @param {Promise<HttpOperationResponse>} promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns {Function} A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nexport function promiseToServiceCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    return function (cb) {\n        promise.then(function (data) {\n            process.nextTick(cb, undefined, data.parsedBody, data.request, data);\n        }, function (err) {\n            process.nextTick(cb, err);\n        });\n    };\n}\nexport function prepareXMLRootList(obj, elementName) {\n    var _a;\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    return _a = {}, _a[elementName] = obj, _a;\n}\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param {object} targetCtor The target object on which the properties need to be applied.\n * @param {Array<object>} sourceCtors An array of source objects from which the properties need to be taken.\n */\nexport function applyMixins(targetCtor, sourceCtors) {\n    sourceCtors.forEach(function (sourceCtors) {\n        Object.getOwnPropertyNames(sourceCtors.prototype).forEach(function (name) {\n            targetCtor.prototype[name] = sourceCtors.prototype[name];\n        });\n    });\n}\nvar validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param {string} value The value to be validated for ISO 8601 duration format.\n * @return {boolean} `true` if valid, `false` otherwise.\n */\nexport function isDuration(value) {\n    return validateISODuration.test(value);\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param {string | undefined} value The value to search and replace in.\n * @param {string} searchValue The value to search for in the value argument.\n * @param {string} replaceValue The value to replace searchValue with in the value argument.\n * @returns {string | undefined} The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(value, searchValue, replaceValue) {\n    return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n/**\n * Determines whether the given enity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param value Any entity\n * @return boolean - true is it is primitive type, false otherwise.\n */\nexport function isPrimitiveType(value) {\n    return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\n//# sourceMappingURL=utils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nvar parser = new DOMParser();\nexport function parseXML(str) {\n    try {\n        var dom = parser.parseFromString(str, \"application/xml\");\n        throwIfError(dom);\n        var obj = domToObject(dom.childNodes[0]);\n        return Promise.resolve(obj);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\nvar errorNS = \"\";\ntry {\n    errorNS = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n        .namespaceURI;\n}\ncatch (ignored) {\n    // Most browsers will return a document containing <parsererror>, but IE will throw.\n}\nfunction throwIfError(dom) {\n    if (errorNS) {\n        var parserErrors = dom.getElementsByTagNameNS(errorNS, \"parsererror\");\n        if (parserErrors.length) {\n            throw new Error(parserErrors.item(0).innerHTML);\n        }\n    }\n}\nfunction isElement(node) {\n    return !!node.attributes;\n}\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node) {\n    return isElement(node) && node.hasAttributes() ? node : undefined;\n}\nfunction domToObject(node) {\n    var result = {};\n    var childNodeCount = node.childNodes.length;\n    var firstChildNode = node.childNodes[0];\n    var onlyChildTextValue = (firstChildNode &&\n        childNodeCount === 1 &&\n        firstChildNode.nodeType === Node.TEXT_NODE &&\n        firstChildNode.nodeValue) ||\n        undefined;\n    var elementWithAttributes = asElementWithAttributes(node);\n    if (elementWithAttributes) {\n        result[\"$\"] = {};\n        for (var i = 0; i < elementWithAttributes.attributes.length; i++) {\n            var attr = elementWithAttributes.attributes[i];\n            result[\"$\"][attr.nodeName] = attr.nodeValue;\n        }\n        if (onlyChildTextValue) {\n            result[\"_\"] = onlyChildTextValue;\n        }\n    }\n    else if (childNodeCount === 0) {\n        result = \"\";\n    }\n    else if (onlyChildTextValue) {\n        result = onlyChildTextValue;\n    }\n    if (!onlyChildTextValue) {\n        for (var i = 0; i < childNodeCount; i++) {\n            var child = node.childNodes[i];\n            // Ignore leading/trailing whitespace nodes\n            if (child.nodeType !== Node.TEXT_NODE) {\n                var childObject = domToObject(child);\n                if (!result[child.nodeName]) {\n                    result[child.nodeName] = childObject;\n                }\n                else if (Array.isArray(result[child.nodeName])) {\n                    result[child.nodeName].push(childObject);\n                }\n                else {\n                    result[child.nodeName] = [result[child.nodeName], childObject];\n                }\n            }\n        }\n    }\n    return result;\n}\n// tslint:disable-next-line:no-null-keyword\nvar doc = document.implementation.createDocument(null, null, null);\nvar serializer = new XMLSerializer();\nexport function stringifyXML(obj, opts) {\n    var rootName = (opts && opts.rootName) || \"root\";\n    var dom = buildNode(obj, rootName)[0];\n    return ('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom));\n}\nfunction buildAttributes(attrs) {\n    var result = [];\n    for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var attr = doc.createAttribute(key);\n        attr.value = attrs[key].toString();\n        result.push(attr);\n    }\n    return result;\n}\nfunction buildNode(obj, elementName) {\n    if (typeof obj === \"string\" || typeof obj === \"number\" || typeof obj === \"boolean\") {\n        var elem = doc.createElement(elementName);\n        elem.textContent = obj.toString();\n        return [elem];\n    }\n    else if (Array.isArray(obj)) {\n        var result = [];\n        for (var _i = 0, obj_1 = obj; _i < obj_1.length; _i++) {\n            var arrayElem = obj_1[_i];\n            for (var _a = 0, _b = buildNode(arrayElem, elementName); _a < _b.length; _a++) {\n                var child = _b[_a];\n                result.push(child);\n            }\n        }\n        return result;\n    }\n    else if (typeof obj === \"object\") {\n        var elem = doc.createElement(elementName);\n        for (var _c = 0, _d = Object.keys(obj); _c < _d.length; _c++) {\n            var key = _d[_c];\n            if (key === \"$\") {\n                for (var _e = 0, _f = buildAttributes(obj[key]); _e < _f.length; _e++) {\n                    var attr = _f[_e];\n                    elem.attributes.setNamedItem(attr);\n                }\n            }\n            else {\n                for (var _g = 0, _h = buildNode(obj[key], key); _g < _h.length; _g++) {\n                    var child = _h[_g];\n                    elem.appendChild(child);\n                }\n            }\n        }\n        return [elem];\n    }\n    else {\n        throw new Error(\"Illegal value passed to buildObject: \" + obj);\n    }\n}\n//# sourceMappingURL=xml.browser.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { HttpHeaders, isHttpHeadersLike } from \"./httpHeaders\";\nimport { Serializer } from \"./serializer\";\nimport { generateUuid } from \"./util/utils\";\nexport function isWebResourceLike(object) {\n    if (typeof object !== \"object\") {\n        return false;\n    }\n    if (typeof object.url === \"string\" &&\n        typeof object.method === \"string\" &&\n        typeof object.headers === \"object\" &&\n        isHttpHeadersLike(object.headers) &&\n        typeof object.validateRequestProperties === \"function\" &&\n        typeof object.prepare === \"function\" &&\n        typeof object.clone === \"function\") {\n        return true;\n    }\n    return false;\n}\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n *\n * @constructor\n */\nvar WebResource = /** @class */ (function () {\n    function WebResource(url, method, body, query, headers, streamResponseBody, withCredentials, abortSignal, timeout, onUploadProgress, onDownloadProgress, proxySettings, keepAlive, agentSettings, redirectLimit) {\n        this.streamResponseBody = streamResponseBody;\n        this.url = url || \"\";\n        this.method = method || \"GET\";\n        this.headers = isHttpHeadersLike(headers) ? headers : new HttpHeaders(headers);\n        this.body = body;\n        this.query = query;\n        this.formData = undefined;\n        this.withCredentials = withCredentials || false;\n        this.abortSignal = abortSignal;\n        this.timeout = timeout || 0;\n        this.onUploadProgress = onUploadProgress;\n        this.onDownloadProgress = onDownloadProgress;\n        this.proxySettings = proxySettings;\n        this.keepAlive = keepAlive;\n        this.agentSettings = agentSettings;\n        this.redirectLimit = redirectLimit;\n    }\n    /**\n     * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n     * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n     * mentioned properties are not defined.\n     */\n    WebResource.prototype.validateRequestProperties = function () {\n        if (!this.method) {\n            throw new Error(\"WebResource.method is required.\");\n        }\n        if (!this.url) {\n            throw new Error(\"WebResource.url is required.\");\n        }\n    };\n    /**\n     * Prepares the request.\n     * @param {RequestPrepareOptions} options Options to provide for preparing the request.\n     * @returns {WebResource} Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n     */\n    WebResource.prototype.prepare = function (options) {\n        if (!options) {\n            throw new Error(\"options object is required\");\n        }\n        if (options.method == undefined || typeof options.method.valueOf() !== \"string\") {\n            throw new Error(\"options.method must be a string.\");\n        }\n        if (options.url && options.pathTemplate) {\n            throw new Error(\"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\");\n        }\n        if ((options.pathTemplate == undefined || typeof options.pathTemplate.valueOf() !== \"string\") &&\n            (options.url == undefined || typeof options.url.valueOf() !== \"string\")) {\n            throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n        }\n        // set the url if it is provided.\n        if (options.url) {\n            if (typeof options.url !== \"string\") {\n                throw new Error('options.url must be of type \"string\".');\n            }\n            this.url = options.url;\n        }\n        // set the method\n        if (options.method) {\n            var validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n            if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n                throw new Error('The provided method \"' +\n                    options.method +\n                    '\" is invalid. Supported HTTP methods are: ' +\n                    JSON.stringify(validMethods));\n            }\n        }\n        this.method = options.method.toUpperCase();\n        // construct the url if path template is provided\n        if (options.pathTemplate) {\n            var pathTemplate_1 = options.pathTemplate, pathParameters_1 = options.pathParameters;\n            if (typeof pathTemplate_1 !== \"string\") {\n                throw new Error('options.pathTemplate must be of type \"string\".');\n            }\n            if (!options.baseUrl) {\n                options.baseUrl = \"https://management.azure.com\";\n            }\n            var baseUrl = options.baseUrl;\n            var url_1 = baseUrl +\n                (baseUrl.endsWith(\"/\") ? \"\" : \"/\") +\n                (pathTemplate_1.startsWith(\"/\") ? pathTemplate_1.slice(1) : pathTemplate_1);\n            var segments = url_1.match(/({\\w*\\s*\\w*})/gi);\n            if (segments && segments.length) {\n                if (!pathParameters_1) {\n                    throw new Error(\"pathTemplate: \" + pathTemplate_1 + \" has been provided. Hence, options.pathParameters must also be provided.\");\n                }\n                segments.forEach(function (item) {\n                    var pathParamName = item.slice(1, -1);\n                    var pathParam = pathParameters_1[pathParamName];\n                    if (pathParam === null ||\n                        pathParam === undefined ||\n                        !(typeof pathParam === \"string\" || typeof pathParam === \"object\")) {\n                        throw new Error(\"pathTemplate: \" + pathTemplate_1 + \" contains the path parameter \" + pathParamName +\n                            (\" however, it is not present in \" + pathParameters_1 + \" - \" + JSON.stringify(pathParameters_1, undefined, 2) + \".\") +\n                            (\"The value of the path parameter can either be a \\\"string\\\" of the form { \" + pathParamName + \": \\\"some sample value\\\" } or \") +\n                            (\"it can be an \\\"object\\\" of the form { \\\"\" + pathParamName + \"\\\": { value: \\\"some sample value\\\", skipUrlEncoding: true } }.\"));\n                    }\n                    if (typeof pathParam.valueOf() === \"string\") {\n                        url_1 = url_1.replace(item, encodeURIComponent(pathParam));\n                    }\n                    if (typeof pathParam.valueOf() === \"object\") {\n                        if (!pathParam.value) {\n                            throw new Error(\"options.pathParameters[\" + pathParamName + \"] is of type \\\"object\\\" but it does not contain a \\\"value\\\" property.\");\n                        }\n                        if (pathParam.skipUrlEncoding) {\n                            url_1 = url_1.replace(item, pathParam.value);\n                        }\n                        else {\n                            url_1 = url_1.replace(item, encodeURIComponent(pathParam.value));\n                        }\n                    }\n                });\n            }\n            this.url = url_1;\n        }\n        // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n        if (options.queryParameters) {\n            var queryParameters = options.queryParameters;\n            if (typeof queryParameters !== \"object\") {\n                throw new Error(\"options.queryParameters must be of type object. It should be a JSON object \" +\n                    \"of \\\"query-parameter-name\\\" as the key and the \\\"query-parameter-value\\\" as the value. \" +\n                    \"The \\\"query-parameter-value\\\" may be fo type \\\"string\\\" or an \\\"object\\\" of the form { value: \\\"query-parameter-value\\\", skipUrlEncoding: true }.\");\n            }\n            // append question mark if it is not present in the url\n            if (this.url && this.url.indexOf(\"?\") === -1) {\n                this.url += \"?\";\n            }\n            // construct queryString\n            var queryParams = [];\n            // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n            this.query = {};\n            for (var queryParamName in queryParameters) {\n                var queryParam = queryParameters[queryParamName];\n                if (queryParam) {\n                    if (typeof queryParam === \"string\") {\n                        queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n                        this.query[queryParamName] = encodeURIComponent(queryParam);\n                    }\n                    else if (typeof queryParam === \"object\") {\n                        if (!queryParam.value) {\n                            throw new Error(\"options.queryParameters[\" + queryParamName + \"] is of type \\\"object\\\" but it does not contain a \\\"value\\\" property.\");\n                        }\n                        if (queryParam.skipUrlEncoding) {\n                            queryParams.push(queryParamName + \"=\" + queryParam.value);\n                            this.query[queryParamName] = queryParam.value;\n                        }\n                        else {\n                            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n                            this.query[queryParamName] = encodeURIComponent(queryParam.value);\n                        }\n                    }\n                }\n            } // end-of-for\n            // append the queryString\n            this.url += queryParams.join(\"&\");\n        }\n        // add headers to the request if they are provided\n        if (options.headers) {\n            var headers = options.headers;\n            for (var _i = 0, _a = Object.keys(options.headers); _i < _a.length; _i++) {\n                var headerName = _a[_i];\n                this.headers.set(headerName, headers[headerName]);\n            }\n        }\n        // ensure accept-language is set correctly\n        if (!this.headers.get(\"accept-language\")) {\n            this.headers.set(\"accept-language\", \"en-US\");\n        }\n        // ensure the request-id is set correctly\n        if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n            this.headers.set(\"x-ms-client-request-id\", generateUuid());\n        }\n        // default\n        if (!this.headers.get(\"Content-Type\")) {\n            this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n        }\n        // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicilty\n        this.body = options.body;\n        if (options.body != undefined) {\n            // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n            if (options.bodyIsStream) {\n                if (!this.headers.get(\"Transfer-Encoding\")) {\n                    this.headers.set(\"Transfer-Encoding\", \"chunked\");\n                }\n                if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n                    this.headers.set(\"Content-Type\", \"application/octet-stream\");\n                }\n            }\n            else {\n                if (options.serializationMapper) {\n                    this.body = new Serializer(options.mappers).serialize(options.serializationMapper, options.body, \"requestBody\");\n                }\n                if (!options.disableJsonStringifyOnBody) {\n                    this.body = JSON.stringify(options.body);\n                }\n            }\n        }\n        this.abortSignal = options.abortSignal;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.onUploadProgress = options.onUploadProgress;\n        this.redirectLimit = options.redirectLimit;\n        this.streamResponseBody = options.streamResponseBody;\n        return this;\n    };\n    /**\n     * Clone this WebResource HTTP request object.\n     * @returns {WebResource} The clone of this WebResource HTTP request object.\n     */\n    WebResource.prototype.clone = function () {\n        var result = new WebResource(this.url, this.method, this.body, this.query, this.headers && this.headers.clone(), this.streamResponseBody, this.withCredentials, this.abortSignal, this.timeout, this.onUploadProgress, this.onDownloadProgress, this.proxySettings, this.keepAlive, this.agentSettings, this.redirectLimit);\n        if (this.formData) {\n            result.formData = this.formData;\n        }\n        if (this.operationSpec) {\n            result.operationSpec = this.operationSpec;\n        }\n        if (this.shouldDeserialize) {\n            result.shouldDeserialize = this.shouldDeserialize;\n        }\n        if (this.operationResponseGetter) {\n            result.operationResponseGetter = this.operationResponseGetter;\n        }\n        return result;\n    };\n    return WebResource;\n}());\nexport { WebResource };\n//# sourceMappingURL=webResource.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { HttpHeaders } from \"./httpHeaders\";\nimport { RestError } from \"./restError\";\n/**\n * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n */\nvar XhrHttpClient = /** @class */ (function () {\n    function XhrHttpClient() {\n    }\n    XhrHttpClient.prototype.sendRequest = function (request) {\n        var xhr = new XMLHttpRequest();\n        if (request.agentSettings) {\n            throw new Error(\"HTTP agent settings not supported in browser environment\");\n        }\n        if (request.proxySettings) {\n            throw new Error(\"HTTP proxy is not supported in browser environment\");\n        }\n        var abortSignal = request.abortSignal;\n        if (abortSignal) {\n            var listener_1 = function () {\n                xhr.abort();\n            };\n            abortSignal.addEventListener(\"abort\", listener_1);\n            xhr.addEventListener(\"readystatechange\", function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    abortSignal.removeEventListener(\"abort\", listener_1);\n                }\n            });\n        }\n        addProgressListener(xhr.upload, request.onUploadProgress);\n        addProgressListener(xhr, request.onDownloadProgress);\n        if (request.formData) {\n            var formData = request.formData;\n            var requestForm_1 = new FormData();\n            var appendFormValue = function (key, value) {\n                if (value && value.hasOwnProperty(\"value\") && value.hasOwnProperty(\"options\")) {\n                    requestForm_1.append(key, value.value, value.options);\n                }\n                else {\n                    requestForm_1.append(key, value);\n                }\n            };\n            for (var _i = 0, _a = Object.keys(formData); _i < _a.length; _i++) {\n                var formKey = _a[_i];\n                var formValue = formData[formKey];\n                if (Array.isArray(formValue)) {\n                    for (var j = 0; j < formValue.length; j++) {\n                        appendFormValue(formKey, formValue[j]);\n                    }\n                }\n                else {\n                    appendFormValue(formKey, formValue);\n                }\n            }\n            request.body = requestForm_1;\n            request.formData = undefined;\n            var contentType = request.headers.get(\"Content-Type\");\n            if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                // browser will automatically apply a suitable content-type header\n                request.headers.remove(\"Content-Type\");\n            }\n        }\n        xhr.open(request.method, request.url);\n        xhr.timeout = request.timeout;\n        xhr.withCredentials = request.withCredentials;\n        for (var _b = 0, _c = request.headers.headersArray(); _b < _c.length; _b++) {\n            var header = _c[_b];\n            xhr.setRequestHeader(header.name, header.value);\n        }\n        xhr.responseType = request.streamResponseBody ? \"blob\" : \"text\";\n        // tslint:disable-next-line:no-null-keyword\n        xhr.send(request.body === undefined ? null : request.body);\n        if (request.streamResponseBody) {\n            return new Promise(function (resolve, reject) {\n                xhr.addEventListener(\"readystatechange\", function () {\n                    // Resolve as soon as headers are loaded\n                    if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n                        var blobBody = new Promise(function (resolve, reject) {\n                            xhr.addEventListener(\"load\", function () {\n                                resolve(xhr.response);\n                            });\n                            rejectOnTerminalEvent(request, xhr, reject);\n                        });\n                        resolve({\n                            request: request,\n                            status: xhr.status,\n                            headers: parseHeaders(xhr),\n                            blobBody: blobBody,\n                        });\n                    }\n                });\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                xhr.addEventListener(\"load\", function () {\n                    return resolve({\n                        request: request,\n                        status: xhr.status,\n                        headers: parseHeaders(xhr),\n                        bodyAsText: xhr.responseText,\n                    });\n                });\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n    };\n    return XhrHttpClient;\n}());\nexport { XhrHttpClient };\nfunction addProgressListener(xhr, listener) {\n    if (listener) {\n        xhr.addEventListener(\"progress\", function (rawEvent) {\n            return listener({\n                loadedBytes: rawEvent.loaded,\n            });\n        });\n    }\n}\n// exported locally for testing\nexport function parseHeaders(xhr) {\n    var responseHeaders = new HttpHeaders();\n    var headerLines = xhr\n        .getAllResponseHeaders()\n        .trim()\n        .split(/[\\r\\n]+/);\n    for (var _i = 0, headerLines_1 = headerLines; _i < headerLines_1.length; _i++) {\n        var line = headerLines_1[_i];\n        var index = line.indexOf(\":\");\n        var headerName = line.slice(0, index);\n        var headerValue = line.slice(index + 2);\n        responseHeaders.set(headerName, headerValue);\n    }\n    return responseHeaders;\n}\nfunction rejectOnTerminalEvent(request, xhr, reject) {\n    xhr.addEventListener(\"error\", function () {\n        return reject(new RestError(\"Failed to send request to \" + request.url, RestError.REQUEST_SEND_ERROR, undefined, request));\n    });\n    xhr.addEventListener(\"abort\", function () {\n        return reject(new RestError(\"The request was aborted\", RestError.REQUEST_ABORTED_ERROR, undefined, request));\n    });\n    xhr.addEventListener(\"timeout\", function () {\n        return reject(new RestError(\"timeout of \" + xhr.timeout + \"ms exceeded\", RestError.REQUEST_SEND_ERROR, undefined, request));\n    });\n}\n//# sourceMappingURL=xhrHttpClient.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","\nimport { ComputerVisionClient } from '@azure/cognitiveservices-computervision';\nimport { ApiKeyCredentials } from '@azure/ms-rest-js';\n\nconst computerVisionClient = new ComputerVisionClient(\n  new ApiKeyCredentials({ inHeader: \n    { 'Ocp-Apim-Subscription-Key': 'b2b0f47751494c8493d87044ce5cecb0' } }),\n      'https://visualbilty.cognitiveservices.azure.com/');\n\n//Get all images\nlet images = window.document.querySelectorAll(\"img\");\n\nfor(let i = 0; i < images.length; i++){\n    \n    var imgTag = images[i];\n\n    if(!imgTag.alt)\n    {\n        recognizedImage(images[i]);\n    }\n    \n}\n\nfunction recognizedImage(imgTag) {\n\n    const url = imgTag.src;\n\n    computerVisionClient.describeImage(url)\n      .then(data => {\n            if(data.captions?.length > 0)\n            {\n                if(data.captions[0].text === 'text')\n                {\n                    console.log(data.captions[0]);\n                    //Need to call OCR API to recognize the text\n                    recognizedText(imgTag);\n                }\n\n                //get display text\n                let altText = generateAltText(data.captions[0].text, data.captions[0].confidence);\n\n                appendAlt(imgTag, altText);\n            }\n        })\n      .catch(console.error);\n}\n\nfunction appendAlt(imgTag, altText) {\n\n  imgTag.alt = generateAltText(altText);\n\n  console.log(imgTag.alt);\n\n}\n\n\nfunction generateAltText(data, confidence){\n  let ret = '';\n  if(confidence > 0.40)\n    ret = \"It is\" + data;\n  else if(confidence < 0.4 && confidence > 0.2)\n    ret = \"It is probbaility \" + data;\n  else if(confidence < 0.4 && confidence > 0.2)\n    ret = \"It is likely \" + data;\n  else\n    ret = \"Image cannot be recogenized.\";\n}\n\nfunction recognizedText(imgTag)\n{\n  var url = imgTag.src;\n  computerVisionClient.recognizePrintedText(true, url)\n  .then((result) => {\n    if(result.regions?.length > 0)\n    {\n      let text = \"\";\n      if(result.regions[0].lines?.length > 0)\n      {\n        result.regions[0].lines[0].words.forEach(element => {\n          text += element.text + \" \";\n        });\n\n        //get display text\n        let altText = generateAltText(text, 1);\n\n        appendAlt(imgTag, altText);\n      }\n    }\n    console.log(text);\n\n    return text;\n  });\n}","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.h = () => (\"b5b3d25c6ffa1cde17fe\")","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":[],"sourceRoot":""}